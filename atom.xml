<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  
  <title><![CDATA[假如上帝不是程序员]]></title>
  <subtitle><![CDATA[--存在就是最大的bug]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://x8087.gitcafe.io//"/>
  <updated>2015-08-13T15:08:39.000Z</updated>
  <id>http://x8087.gitcafe.io//</id>
  
  <author>
    <name><![CDATA[x8087]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[琐碎问题收集]]></title>
    <link href="http://x8087.gitcafe.io/2015/08/11/%E7%90%90%E7%A2%8E%E9%97%AE%E9%A2%98%E6%94%B6%E9%9B%86/"/>
    <id>http://x8087.gitcafe.io/2015/08/11/琐碎问题收集/</id>
    <published>2015-08-11T09:15:33.000Z</published>
    <updated>2015-08-13T15:08:39.000Z</updated>
    <content type="html"><![CDATA[<h2 id="Gmail邮件内容加载不出">Gmail邮件内容加载不出</h2><blockquote>
<p>添加hosts<br>173.194.65.108 imap.gmail.com<br>173.194.65.108 pop.gmail.com<br>173.194.193.108 smtp.gmail.com</p>
</blockquote>
<h2 id="shell后台程序管理">shell后台程序管理</h2><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">fg</span> <span class="comment">#跳转到上一后台程序</span></span><br><span class="line"><span class="built_in">fg</span> %n <span class="comment">#跳转到第n个后台程序</span></span><br><span class="line"><span class="built_in">jobs</span> <span class="comment">#打印当前所有后台程序</span></span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="Gmail邮件内容加载不出">Gmail邮件内容加载不出</h2><blockquote>
<p>添加hosts<br>173.194.65.108 imap.gmail.com<br>173.194.65.108 pop.gmail.com<br>173.194]]>
    </summary>
    
      <category term="Bug" scheme="http://x8087.gitcafe.io/tags/Bug/"/>
    
      <category term="技术" scheme="http://x8087.gitcafe.io/tags/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="问题" scheme="http://x8087.gitcafe.io/tags/%E9%97%AE%E9%A2%98/"/>
    
      <category term="问题" scheme="http://x8087.gitcafe.io/categories/%E9%97%AE%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[macbook pro下vim安装YouCompleteMe导致的问题]]></title>
    <link href="http://x8087.gitcafe.io/2015/08/11/macbook-pro%E4%B8%8Bvim%E5%AE%89%E8%A3%85YouCompleteMe%E5%AF%BC%E8%87%B4%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>http://x8087.gitcafe.io/2015/08/11/macbook-pro下vim安装YouCompleteMe导致的问题/</id>
    <published>2015-08-11T02:15:11.000Z</published>
    <updated>2015-08-11T09:18:59.000Z</updated>
    <content type="html"><![CDATA[<h5 id="问题：vim下缺少一个好用的代码补全功能">问题：vim下缺少一个好用的代码补全功能</h5><p><strong>解决方案：</strong></p>
<blockquote>
<p>使用<a href="https://github.com/Valloric/YouCompleteMe" target="_blank" rel="external">YouCompleteMe</a></p>
</blockquote>
<hr>
<h5 id="问题：安装YouCompleteMe后，打开报错vim版本过低">问题：安装<a href="https://github.com/Valloric/YouCompleteMe" target="_blank" rel="external">YouCompleteMe</a>后，打开报错vim版本过低</h5><p>需要人更新最新版本vim<br>mac os10.10自带的vim版本过低<br><strong>解决方案：</strong></p>
<blockquote>
<p>1.本地编译最新版本Vim；<br><br>2.通过home brew安装<a href="https://github.com/macvim-dev/macvim/releases" target="_blank" rel="external">MacVim</a>(<a href="https://github.com/Valloric/YouCompleteMe" target="_blank" rel="external">YouCompleteMe</a>与<a href="https://github.com/macvim-dev/macvim/releases" target="_blank" rel="external">MacVim</a>协作比vim更好);</p>
</blockquote>
<hr>
<h5 id="问题：本地编译vim与YouCompleteMe的python版本不一致，vim打开报错">问题：本地编译vim与<a href="https://github.com/Valloric/YouCompleteMe" target="_blank" rel="external">YouCompleteMe</a>的python版本不一致，vim打开报错</h5><p>本地编译vim源码时使用的是系统自带的python，而安装<a href="https://github.com/Valloric/YouCompleteMe" target="_blank" rel="external">YouCompleteMe</a>与平常使用的是home brew的python<br><strong>解决方案：</strong></p>
<blockquote>
<p>找不到好的解决方案，放弃</p>
</blockquote>
<hr>
<h5 id="问题：将MacVim-app里的vim二进制文件链接到/usr/local/bin下使用报错">问题：将MacVim.app里的<code>vim</code>二进制文件链接到<code>/usr/local/bin</code>下使用报错</h5><p><strong>解决方案：</strong></p>
<blockquote>
<p>找不到问题所在，放弃。<br>转而采用<code>alias</code>的方法链接</p>
</blockquote>
<p><strong>更新：</strong><a href="#2015-08-11_16:37"><font color="blue">2015-08-11 16:37:22</font></a></p>
<hr>
<h5 id="问题：当采用alias方法链接时，shell脚本内使用vim报错">问题：当采用<code>alias</code>方法链接时，shell脚本内使用vim报错</h5><p>在控制台使用正常，在shell脚本使用时<code>alias</code>失效，调用的是系统自带的vim<br>通过在脚本中输出Path环境变量，vim版本和所使用的vim位置，可以确认并没有使用<code>alias</code>指定的vim。<br><strong>解决方案</strong></p>
<blockquote>
<p>由于暂时不确定什么原因导致，找不到更好的解决方法，只能在脚本中添加<code>alias</code>链接来解决。</p>
</blockquote>
<p><strong>更新：</strong><a href="#2015-08-11_16:37"><font color="blue">2015-08-11 16:37:22</font></a></p>
<hr>
<h5 id="后期更新：">后期更新：</h5><h6 id="2015-08-11_16:37">2015-08-11_16:37</h6><hr>
<blockquote>
<p>从<a href="https://github.com/macvim-dev/macvim/releases" target="_blank" rel="external">MacVim</a>下载<a href="https://github.com/macvim-dev/macvim/releases" target="_blank" rel="external">MacVim</a> Snapshot文件，解压后把文件mvim放到<code>/usr/local/bin</code>目录下并建立软链接：(详细可查看<a href="https://github.com/macvim-dev/macvim/releases" target="_blank" rel="external">MacVim</a>帮助<code>:h mvim</code>)</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ln <span class="operator">-s</span> /usr/<span class="built_in">local</span>/bin/mvim vim</span><br><span class="line">ln <span class="operator">-s</span> /usr/<span class="built_in">local</span>/bin/mvim view</span><br><span class="line">ln <span class="operator">-s</span> /usr/<span class="built_in">local</span>/bin/mvim vimdiff</span><br><span class="line">ln <span class="operator">-s</span> /usr/<span class="built_in">local</span>/bin/mvim vi</span><br><span class="line">ln <span class="operator">-s</span> /usr/<span class="built_in">local</span>/bin/mvim vimex</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<h5 id="问题：vim下缺少一个好用的代码补全功能">问题：vim下缺少一个好用的代码补全功能</h5><p><strong>解决方案：</strong></p>
<blockquote>
<p>使用<a href="https://github.com/Valloric/]]>
    </summary>
    
      <category term="YouCompleteMe" scheme="http://x8087.gitcafe.io/tags/YouCompleteMe/"/>
    
      <category term="bug" scheme="http://x8087.gitcafe.io/tags/bug/"/>
    
      <category term="macbook" scheme="http://x8087.gitcafe.io/tags/macbook/"/>
    
      <category term="vim" scheme="http://x8087.gitcafe.io/tags/vim/"/>
    
      <category term="技术" scheme="http://x8087.gitcafe.io/tags/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="问题" scheme="http://x8087.gitcafe.io/tags/%E9%97%AE%E9%A2%98/"/>
    
      <category term="问题" scheme="http://x8087.gitcafe.io/categories/%E9%97%AE%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[如何完成一件事]]></title>
    <link href="http://x8087.gitcafe.io/2015/08/10/%E5%A6%82%E4%BD%95%E5%AE%8C%E6%88%90%E4%B8%80%E4%BB%B6%E4%BA%8B/"/>
    <id>http://x8087.gitcafe.io/2015/08/10/如何完成一件事/</id>
    <published>2015-08-10T09:00:59.000Z</published>
    <updated>2015-08-10T09:21:30.000Z</updated>
    <content type="html"><![CDATA[<p>想做一件事<br>结果总是遇到各种困难<br>有什么困难？<br>往往自己也不清楚</p>
<p>纠结很久<br>还是没能把困难解决<br>于是停下来<br>做另一件事<br>结果又遇到很多问题<br>然后继续悲催的纠结</p>
<p>终于，就这样一天过去了！<br>还是什么事也没做成……</p>
<p>程序员很多时候都会遇到这种情况<br>尤其在解决问题的时候<br>各种忙碌，却什么也没做成<br>甚至自己做过什么,遇到什么困难都不清楚</p>
<p>那么，如何避免呢？</p>
<p>好好列个表单<br>把要做的事情列下来<br>然后根据紧急情况和难易程度排序<br>一个个把紧急且较容易的问题优先解决<br>然后再来慢慢纠结剩下的<br>把解决过程中的问题记录下来<br>对解决不了的问题所遇到的困难更要详细描述<br>确认问题所在<br>等待以后解决</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>想做一件事<br>结果总是遇到各种困难<br>有什么困难？<br>往往自己也不清楚</p>
<p>纠结很久<br>还是没能把困难解决<br>于是停下来<br>做另一件事<br>结果又遇到很多问题<br>然后继续悲催的纠结</p>
<p>终于，就这样一天过去了！<br>还是什]]>
    </summary>
    
      <category term="心情" scheme="http://x8087.gitcafe.io/tags/%E5%BF%83%E6%83%85/"/>
    
      <category term="杂感" scheme="http://x8087.gitcafe.io/tags/%E6%9D%82%E6%84%9F/"/>
    
      <category term="生活" scheme="http://x8087.gitcafe.io/tags/%E7%94%9F%E6%B4%BB/"/>
    
      <category term="情感" scheme="http://x8087.gitcafe.io/categories/%E6%83%85%E6%84%9F/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[疯狂Vim折腾之插件]]></title>
    <link href="http://x8087.gitcafe.io/2015/08/07/%E7%96%AF%E7%8B%82Vim%E6%8A%98%E8%85%BE%E4%B9%8B%E6%8F%92%E4%BB%B6/"/>
    <id>http://x8087.gitcafe.io/2015/08/07/疯狂Vim折腾之插件/</id>
    <published>2015-08-07T12:20:57.000Z</published>
    <updated>2015-08-09T12:56:04.000Z</updated>
    <content type="html"><![CDATA[<h5 id="Mac上快速安装YouCompleteMe">Mac上快速安装<a href="https://github.com/Valloric/YouCompleteMe#general-usage" target="_blank" rel="external">YouCompleteMe</a></h5><ol>
<li>安装<a href="https://github.com/macvim-dev/macvim/releases" target="_blank" rel="external">MacVim</a><ul>
<li>通过brew快速安装<code>brew install macvim</code></li>
<li>保证正确运行可复制从MacVim下载的mvim脚本文件到本地二进制输出文件夹并添加软链接</li>
<li>控制台vim<ul>
<li>推荐使用MacVim.app包内的vim二进制文件(MacVim.app/Contents/MacOS/Vim)</li>
<li>由于homebrew的配置编译方法有问题，不推荐使用homebrew的vim</li>
<li>使用homebrew的python以于MacVim可能出现编译问题或者编译后启动不了，需要运行<code>brew rm python; brew install python</code>更新到最新</li>
</ul>
</li>
</ul>
</li>
<li>通过Vundle安装YouCompleteMe<ul>
<li>注意更新后要重新调用install.sh编译</li>
<li>C-family completion需要最新的CLT和Xcode</li>
</ul>
</li>
<li>安装CMake</li>
<li><p><code>./install.sh</code>可选项</p>
<ul>
<li>C语言支持:<code>--clang-completer</code></li>
<li>C#支持:<code>--omnisharp-completer</code></li>
<li>Go支持:<code>--gocode-completer</code></li>
</ul>
</li>
<li><p>C语言的语法补全还需要添加配置flags</p>
</li>
</ol>
<h5 id="YouCompleteMe使用方法"><a href="https://github.com/Valloric/YouCompleteMe#general-usage" target="_blank" rel="external">YouCompleteMe</a>使用方法</h5><p>1.基础用法</p>
<ul>
<li>使入字符，自动提示。输入的字符越多，可选项越准</li>
<li>智能大小写，大小写敏感。输入大写过滤只包含该大写字符选项，小写则包含该字符大小写选项</li>
<li>Tab选取或遍历选项，shit-Tab反方向选取。<em>(注意：控制台下的shift-Tab按键可能无法使用，需另外关联)</em></li>
<li>补全列表排列时，会将符合子字符项的选项排在前面。每个子字符串首字母大写，首字符为下划线时忽略下划线。   </li>
<li>Ctrl-space快捷键可直接调出补全列表，而不需要输入任何字符。</li>
</ul>
<p>2.c语言补全</p>
<ul>
<li>YCM会自动在文件打开的目录及子目录下查找.ycm_extra_conf.py文件</li>
<li>也可以配置全局的.ycm_extra_conf.py文件</li>
<li>范例<a href="https://github.com/Valloric/ycmd/blob/master/cpp/ycm/.ycm_extra_conf.py" target="_blank" rel="external">.ycm_extra_conf.py</a>，仅供参考，不同项目可能不一样，大部分项目都只需要使用文件中的部分标志</li>
<li><a href="http://clang.llvm.org/docs/JSONCompilationDatabase.html" target="_blank" rel="external">Clang’s CompilationDatabase system</a>通过CMake生成文件只需在项目的CMakeList.txt文件里加入<code>set(CMAKE_EXPORT_COMPILE_COMMANDS 1)</code></li>
<li><a href="https://github.com/rdnetto/YCM-Generator" target="_blank" rel="external">YCM-Generator</a>ycm_extra_conf.py文件生成工具</li>
<li>如果编译错误或者文件包含的头文件有错误，会使生成补全列表的时间比较久且生成的列表项出现很无关补全项，调用<code>:YcmDiags</code>查看错误</li>
</ul>
<p>3.其他语言的补全</p>
<ul>
<li>Pyhon,C#和Go语言各自通过<a href="https://github.com/davidhalter/jedi" target="_blank" rel="external">Jedi</a>,<a href="https://github.com/nosami/OmniSharpServer" target="_blank" rel="external">Omnisharp</a>和<a href="https://github.com/nsf/gocode" target="_blank" rel="external">GoCode</a>语言引擎提供补全，需要安装编译时添加相应选项</li>
<li>对于没有本地语法引擎支持的文件类型，可以使用<code>omnifunc</code>(<code>:h omnifunc</code>)作为语法补全源，Vim为多种语言自带omnifuncs，类似Ruby,PHP</li>
<li>通过[Eclim][]可以为Java和Ruby提供非常好的omnifuncs<ul>
<li>安装完[Eclim][]后需要在Vim里输入<code>:ProjectCreate &lt;path-to-your-project&gt; -n ruby</code> (or <code>-n java</code>)创建新的Eclip项目并在.vimrc文件内加入<code>let g:EclimCompletionMethod = &#39;omnifunc&#39;</code>使Vim与Eclim更好运行 </li>
</ul>
</li>
</ul>
<p>4.编写新的语法补全</p>
<ul>
<li>通过编写Vim的<code>omnifunc</code>实现</li>
<li>通过自定义YCM补全功能实现</li>
<li>两者的不同：<ul>
<li>omnifunc通过VimScript编写，另一个则使用Python根据YCM的API编写</li>
<li>YCM API是一种更强大的方法和YCM集成，且提供更宽泛的功能设置</li>
<li>YCM方案执行效率会更高</li>
</ul>
</li>
<li>vim参考<code>:h complete-functions</code>，YCM参考<a href="https://github.com/Valloric/ycmd/blob/master/ycmd/completers/completer.py" target="_blank" rel="external">API文档</a></li>
</ul>
<h5 id="Eclim"><a href="http://eclim.org" target="_blank" rel="external">Eclim</a></h5><p>提供通过命令行或网络连接调用Eclipse代码编辑的功能，允许集成到自己喜欢的编辑器上。</p>
]]></content>
    <summary type="html">
    <![CDATA[<h5 id="Mac上快速安装YouCompleteMe">Mac上快速安装<a href="https://github.com/Valloric/YouCompleteMe#general-usage" target="_blank" rel="external">YouC]]>
    </summary>
    
      <category term="Eclim" scheme="http://x8087.gitcafe.io/tags/Eclim/"/>
    
      <category term="YouCompleteMe" scheme="http://x8087.gitcafe.io/tags/YouCompleteMe/"/>
    
      <category term="vim" scheme="http://x8087.gitcafe.io/tags/vim/"/>
    
      <category term="插件" scheme="http://x8087.gitcafe.io/tags/%E6%8F%92%E4%BB%B6/"/>
    
      <category term="工具" scheme="http://x8087.gitcafe.io/categories/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[笔记-Vim实用技巧]]></title>
    <link href="http://x8087.gitcafe.io/2015/08/07/%E7%AC%94%E8%AE%B0-Vim%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
    <id>http://x8087.gitcafe.io/2015/08/07/笔记-Vim实用技巧/</id>
    <published>2015-08-07T01:40:52.000Z</published>
    <updated>2015-08-12T14:46:05.000Z</updated>
    <content type="html"><![CDATA[<h2 id="0-_Vim解决问题的方式">0. Vim解决问题的方式</h2><h3 id="结识-_[^hpoint]_命令">结识<code>.</code> [^hpoint] 命令</h3><p><strong>功能</strong> 重复上次修改<br><strong>注意</strong> </p>
<ul>
<li>插入模式下,重复从进入到结束的所有操作(<em>移动光标会重置修改状态</em>)</li>
<li><code>.</code>命令事实上是一个微型的宏</li>
</ul>
<table>
<thead>
<tr>
<th style="text-align:center">操作</th>
<th>功能</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>x</code></td>
<td>删除光标下字符</td>
</tr>
<tr>
<td style="text-align:center"><code>dd</code></td>
<td>删除整行</td>
</tr>
<tr>
<td style="text-align:center"><code>&gt;G</code></td>
<td>增加当前行到文档末尾处的缩进层级</td>
</tr>
</tbody>
</table>
<h3 id="不要自我重复">不要自我重复</h3><h4 id="减少无关移动">减少无关移动</h4><p><font color="green"><strong>example1:</strong>在行末添加分号</font><br>方法1</p>
<figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$</span><br><span class="line"><span class="keyword">a</span>;&lt;Esc&gt;</span><br><span class="line"><span class="keyword">j</span>$.</span><br></pre></td></tr></table></figure>
<p>方法2:</p>
<figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">A;&lt;Esc&gt;</span><br><span class="line"><span class="keyword">j</span>.</span><br></pre></td></tr></table></figure>
<h4 id="复合命令">复合命令</h4><blockquote>
<p>执行动作的同时自动从普通模式切换到插入模式</p>
</blockquote>
<h4 id="常用复合命令">常用复合命令</h4><table>
<thead>
<tr>
<th style="text-align:center">复合命令</th>
<th style="text-align:left">普通操作</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>C</code></td>
<td style="text-align:left"><code>c$</code></td>
</tr>
<tr>
<td style="text-align:center"><code>s</code></td>
<td style="text-align:left"><code>cl</code></td>
</tr>
<tr>
<td style="text-align:center"><code>S</code></td>
<td style="text-align:left"><code>^c</code></td>
</tr>
<tr>
<td style="text-align:center"><code>I</code></td>
<td style="text-align:left"><code>^i</code></td>
</tr>
<tr>
<td style="text-align:center"><code>A</code></td>
<td style="text-align:left"><code>$a</code></td>
</tr>
<tr>
<td style="text-align:center"><code>o</code></td>
<td style="text-align:left"><code>A&lt;CR&gt;</code></td>
</tr>
<tr>
<td style="text-align:center"><code>O</code></td>
<td style="text-align:left"><code>ko</code></td>
</tr>
</tbody>
</table>
<h3 id="以退为进">以退为进</h3><p>使移动可重复<code>f{char}</code>[^f] <code>;</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">f&#123;char&#125;</span><br><span class="line">&#123;operation&#125;&lt;Esc&gt;</span><br><span class="line">;.</span><br></pre></td></tr></table></figure></p>
<h3 id="执行、重复、回退">执行、重复、回退</h3><table>
<thead>
<tr>
<th style="text-align:center">操作</th>
<th>功能</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>@:</code></td>
<td>重复ex命令</td>
</tr>
<tr>
<td style="text-align:center"><code>&amp;</code></td>
<td>重复上次的替换命令</td>
</tr>
<tr>
<td style="text-align:center"><code>,</code></td>
<td>回退到上次<code>f{char}</code>字符位置</td>
</tr>
<tr>
<td style="text-align:center"><code>u</code></td>
<td>撤消</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th>目的</th>
<th style="text-align:center">操作</th>
<th style="text-align:center">重复</th>
<th style="text-align:center">回退</th>
</tr>
</thead>
<tbody>
<tr>
<td>做出一个修改</td>
<td style="text-align:center"><code>{edit}</code></td>
<td style="text-align:center"><code>.</code></td>
<td style="text-align:center"><code>u</code></td>
</tr>
<tr>
<td>在行内查找下一指定字符</td>
<td style="text-align:center"><code>f{char}</code>/<code>t{char}</code></td>
<td style="text-align:center"><code>;</code></td>
<td style="text-align:center"><code>,</code></td>
</tr>
<tr>
<td>在行内查找上一指定字符</td>
<td style="text-align:center"><code>F{char}</code>/<code>T{char}</code></td>
<td style="text-align:center"><code>;</code></td>
<td style="text-align:center"><code>,</code></td>
</tr>
<tr>
<td>在文档内查找下一匹配项</td>
<td style="text-align:center"><code>/{pattern}&lt;CR&gt;</code></td>
<td style="text-align:center"><code>n</code></td>
<td style="text-align:center"><code>N</code></td>
</tr>
<tr>
<td>在文档内查找上一匹配项</td>
<td style="text-align:center"><code>?{pattern}&lt;CR&gt;</code></td>
<td style="text-align:center"><code>n</code></td>
<td style="text-align:center"><code>N</code></td>
</tr>
<tr>
<td>执行替换</td>
<td style="text-align:center"><code>s/{pattern}/{replacement}</code></td>
<td style="text-align:center"><code>&amp;</code></td>
<td style="text-align:center"><code>u</code></td>
</tr>
<tr>
<td>执行一系列修改</td>
<td style="text-align:center"><code>q{register}{changes}q</code></td>
<td style="text-align:center"><code>@{register}</code></td>
<td style="text-align:center"><code>u</code></td>
</tr>
</tbody>
</table>
<h3 id="查找并手动替换">查找并手动替换</h3><table>
<thead>
<tr>
<th>功能</th>
<th style="text-align:center">操作</th>
</tr>
</thead>
<tbody>
<tr>
<td>替换</td>
<td style="text-align:center"><code>:substitute</code></td>
</tr>
<tr>
<td>查找当前光标下的单词</td>
<td style="text-align:center"><code>*</code> [^hstar]</td>
</tr>
<tr>
<td>设置高亮查找</td>
<td style="text-align:center"><code>set hls</code></td>
</tr>
</tbody>
</table>
<h3 id="结识-范式">结识<code>.</code>范式</h3><blockquote>
<p><strong>用一键移动,另一键执行</strong></p>
</blockquote>
<h2 id="2-_模式">2. 模式</h2><h3 id="2-1-_普通">2.1. 普通</h3><h4 id="2-1-1-_把撤消单元切成块，普通模式和插入模式之间切换的粒度,">2.1.1. 把撤消单元切成块，普通模式和插入模式之间切换的粒度,</h4><h4 id="2-1-2-_构造可重复的修改:">2.1.2. 构造可重复的修改:</h4><table>
<thead>
<tr>
<th>操作</th>
<th>执行重复命令的操作</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>dbx</code></td>
<td><code>x</code></td>
</tr>
<tr>
<td><code>bdw</code></td>
<td><code>dw</code></td>
</tr>
<tr>
<td><code>daw</code></td>
<td><code>daw</code>[^haw]</td>
</tr>
</tbody>
</table>
<h4 id="2-1-3-_用次数做简单的算术运算">2.1.3. 用次数做简单的算术运算</h4><ul>
<li><strong>执行次数</strong>[^hcount] 大部分普通模式命令都可以带一个次数前缀</li>
<li><strong>八进制</strong> 以0开头的数字</li>
</ul>
<table>
<thead>
<tr>
<th>操作</th>
<th>功能</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>&lt;C-a&gt;</code></td>
<td>对当前光标下或光标后数字执行加1</td>
</tr>
<tr>
<td><code>&lt;C-x&gt;</code></td>
<td>对当前光标下或光标后数字执行减1</td>
</tr>
<tr>
<td><code>yyp</code></td>
<td>复制行</td>
</tr>
<tr>
<td><code>cw</code></td>
<td>修改单词</td>
</tr>
<tr>
<td><code>set nrformats=</code></td>
<td>所有数字当作十进制</td>
</tr>
</tbody>
</table>
<h4 id="2-1-4-_能够重复，就别用次数">2.1.4. 能够重复，就别用次数</h4><blockquote>
<p><strong>执行，重复，回退，在必要时使用次数</strong></p>
</blockquote>
<h4 id="2-1-5-_双剑合璧，天下无敌">2.1.5. 双剑合璧，天下无敌</h4><ul>
<li>操作符[^operator] + 动作命令 = 操作</li>
<li>自定义操作符[^mapoperator]，参考已有插件commentary.vim[^pcommentary]</li>
<li>自定义动作命令与已有操作符协同工作[^omapinfo]，参考已有插件textobj-entire[^ptextobjentire]</li>
<li>操作符待决模式Operator-Pending mode，<strong>只接受动作命令状态</strong>:</li>
</ul>
<table>
<thead>
<tr>
<th>命令</th>
<th>用途</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>c</code></td>
<td>修改</td>
</tr>
<tr>
<td><code>d</code></td>
<td>删除</td>
</tr>
<tr>
<td><code>y</code></td>
<td>复制到寄存器</td>
</tr>
<tr>
<td><code>g~</code></td>
<td>反转大小写</td>
</tr>
<tr>
<td><code>gu</code></td>
<td>转换为小写</td>
</tr>
<tr>
<td><code>gU</code></td>
<td>转换为大写</td>
</tr>
<tr>
<td><code>&gt;</code></td>
<td>增加缩进</td>
</tr>
<tr>
<td><code>&lt;</code></td>
<td>减少缩进</td>
</tr>
<tr>
<td><code>=</code></td>
<td>自动缩进</td>
</tr>
<tr>
<td><code>!</code></td>
<td>使用外部程序过滤{motion}所跨越的行</td>
</tr>
</tbody>
</table>
<ul>
<li>多按键操作命令:</li>
</ul>
<table>
<thead>
<tr>
<th>操作符</th>
<th>类型</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>dd</code>,<code>&gt;&gt;</code>,<code>gUgU</code>(<code>gUU</code>)</td>
<td>一个操作命令连续调用再次，相当于作用于当前行</td>
</tr>
<tr>
<td><code>g~</code>,<code>gu</code>,<code>gU</code>[^gU],<code>g</code>[^g],<code>z</code>[^z],<code>ctrl-w</code>[^ctrlw],<code>[</code> [^[]</td>
<td>两个以上按键调用，头一个按键只是第二个按键的前缀，不会激活操作符待决模式，可以把它们当成命名空间</td>
</tr>
<tr>
<td><code>cw</code>,<code>de</code>,<code>yb</code></td>
<td>操作符后带动作命令，激活操作符待决模式</td>
</tr>
</tbody>
</table>
<h3 id="2-2-_插入">2.2. 插入</h3><h4 id="2-2-1-_在插入模式中即时更正错误">2.2.1. 在插入模式中即时更正错误</h4><table>
<thead>
<tr>
<th>按键操作</th>
<th>用途</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>&lt;C-h&gt;</code></td>
<td>删除前一个字符（同退格键）</td>
</tr>
<tr>
<td><code>&lt;C-w&gt;</code></td>
<td>删除前一个单词</td>
</tr>
<tr>
<td><code>&lt;C-u&gt;</code></td>
<td>删至行首</td>
</tr>
</tbody>
</table>
<h4 id="2-2-2-_返回普通模式">2.2.2. 返回普通模式</h4><table>
<thead>
<tr>
<th>按键操作</th>
<th>用途</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>&lt;Esc&gt;</code></td>
<td>切换到普通模式</td>
</tr>
<tr>
<td><code>&lt;C-[&gt;</code></td>
<td>切换到普通模式</td>
</tr>
<tr>
<td><code>&lt;C-o&gt;</code>[^ictrlo]</td>
<td>切换到插入-普通模式</td>
</tr>
<tr>
<td><code>zz</code></td>
<td>重绘屏幕，并把当前行显示在窗口正中</td>
</tr>
</tbody>
</table>
<h4 id="2-2-3-_不离开插入模式，粘贴寄存器中的文本">2.2.3. 不离开插入模式，粘贴寄存器中的文本</h4><ul>
<li><strong>插入模式下粘贴大量文本会有延时，因此相当于逐个输入</strong></li>
<li><strong>插入模式下小心操作</strong><code>K</code>[^K],<code>J</code>[^J]</li>
</ul>
<table>
<thead>
<tr>
<th>按键操作</th>
<th>用途</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>&lt;C-r&gt;{register}</code>[^ictrlr]</td>
<td>插入寄存器内的文本</td>
</tr>
<tr>
<td><code>&lt;C-r&gt;&lt;C-p&gt;{register}</code>[^ictrlrp]</td>
<td>按原义插入寄存器内的文本</td>
</tr>
</tbody>
</table>
<h4 id="2-2-4-_随时随地做运算">2.2.4. 随时随地做运算</h4><blockquote>
<p>表达式寄存器<c-r>=</c-r></p>
</blockquote>
<h4 id="2-2-5-_用字符编码插入非常用字符">2.2.5. 用字符编码插入非常用字符</h4><table>
<thead>
<tr>
<th>按键操作</th>
<th>用途</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>&lt;C-v&gt;{nnn}</code></td>
<td>以十进制字符编码插入字符</td>
</tr>
<tr>
<td><code>&lt;C-v&gt;u{nnnn}</code></td>
<td>以十六进制字符编码插入字符</td>
</tr>
<tr>
<td><code>ga</code></td>
<td>查看字符编码</td>
</tr>
<tr>
<td><code>&lt;C-v&gt;{nodigit}</code></td>
<td>按原义插入非数字字符</td>
</tr>
<tr>
<td><code>&lt;C-k&gt;{c1}{c2}</code></td>
<td>插入以二合字母{c1}{c2}表示的字符</td>
</tr>
</tbody>
</table>
<h4 id="2-2-6-_用二合字母[^digraphsdefault]插入非常用字符">2.2.6. 用二合字母[^digraphsdefault]插入非常用字符</h4><blockquote>
<p><code>:digraphs</code>[^digraphtable] 查看可用的二合字母表</p>
</blockquote>
<h4 id="2-2-7-_用替换模式替换已有文本">2.2.7. 用替换模式替换已有文本</h4><table>
<thead>
<tr>
<th>按键操作</th>
<th>用途</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>R</code></td>
<td>由普通模式进入替换模式，<esc>返回普通模式</esc></td>
</tr>
<tr>
<td><code>gR</code></td>
<td>虚拟替换模式，按屏幕实际显示的宽度来替换字符</td>
</tr>
<tr>
<td><code>r{char}</code>[^r]</td>
<td>单次替换</td>
</tr>
<tr>
<td><code>gr{char}</code></td>
<td>单次虚拟替换</td>
</tr>
</tbody>
</table>
<h3 id="2-3-_可视">2.3. 可视</h3><h4 id="2-3-1-_深入理解可视模式">2.3.1. 深入理解可视模式</h4><blockquote>
<p>选择模式[^selectmode]<br><code>&lt;C-g&gt;</code> —<em>VISUAL</em>—  —<em>SELECT</em>—</p>
</blockquote>
<h4 id="2-3-2-_选择高亮选区">2.3.2. 选择高亮选区</h4><ul>
<li>面向字符的模式</li>
<li>面向行的模式</li>
<li>面向列块的模式</li>
</ul>
<table>
<thead>
<tr>
<th>按键操作</th>
<th>用途</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>v</code></td>
<td>激活面向字符的可视模式</td>
</tr>
<tr>
<td><code>V</code></td>
<td>激活面向行的可视模式</td>
</tr>
<tr>
<td><code>&lt;C-v&gt;</code></td>
<td>激活面向列块的可视模式</td>
</tr>
<tr>
<td><code>gv</code></td>
<td>重复上次的高亮选区</td>
</tr>
</tbody>
</table>
<blockquote>
<p>在可视模式间切换</p>
</blockquote>
<table>
<thead>
<tr>
<th>按键操作</th>
<th>用途</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>&lt;Esc&gt;</code> <code>&lt;C-[&gt;</code></td>
<td>回到普通模式</td>
</tr>
<tr>
<td><code>v</code> <code>V</code> <code>&lt;C-[&gt;</code></td>
<td>切换到普通模式</td>
</tr>
<tr>
<td><code>v</code></td>
<td>切换到面向字符的可视模式</td>
</tr>
<tr>
<td><code>V</code></td>
<td>切换到面向行的可视模式</td>
</tr>
<tr>
<td><code>&lt;C-v&gt;</code></td>
<td>切换到面向列块的可视模式</td>
</tr>
<tr>
<td><code>o</code></td>
<td>切换高亮选区的活动端</td>
</tr>
</tbody>
</table>
<h4 id="2-3-3-_重复执行面向行的可视命令">2.3.3. 重复执行面向行的可视命令</h4><blockquote>
<p>缩进:</p>
<ul>
<li><code>shiftwidth</code></li>
<li><code>softtabstop</code></li>
<li><code>expandtab</code></li>
<li>Tabs and Spaces</li>
</ul>
<p>面向行的可视命令适合<code>.</code>重复操作</p>
</blockquote>
<h4 id="2-3-4-_只要可能，最好用操作符命令，而不是可视命令">2.3.4. 只要可能，最好用操作符命令，而不是可视命令</h4><blockquote>
<p>可视模式操作，不适合重复[^vU]</p>
</blockquote>
<h4 id="2-3-5-_用面向列块的可视模式编辑表格数据">2.3.5. 用面向列块的可视模式编辑表格数据</h4><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;C-<span class="keyword">v</span>&gt;<span class="number">3</span><span class="keyword">j</span></span><br><span class="line"><span class="keyword">x</span>...</span><br><span class="line"><span class="keyword">gv</span></span><br><span class="line"><span class="keyword">r</span>|</span><br><span class="line">yyp</span><br><span class="line">Vr-</span><br></pre></td></tr></table></figure>
<h4 id="2-3-6-_修改列文本">2.3.6. 修改列文本</h4><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;C-<span class="keyword">v</span>&gt;jje</span><br><span class="line"><span class="keyword">c</span></span><br><span class="line">components</span><br><span class="line">&lt;Esc&gt;</span><br></pre></td></tr></table></figure>
<h4 id="2-3-7-_在长短不一的高亮块后添加文本">2.3.7. 在长短不一的高亮块后添加文本</h4><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;C-<span class="keyword">v</span>&gt;jj$</span><br><span class="line">A;</span><br><span class="line">&lt;Esc&gt;</span><br></pre></td></tr></table></figure>
<h3 id="2-4_命令行">2.4 命令行</h3><h4 id="2-4-1_结识vim的命令行模式">2.4.1 结识vim的命令行模式</h4><ul>
<li>vim历史：<strong>ed</strong> —&gt; <strong>ex</strong> —&gt; <strong>vi</strong> —&gt; <strong>vim</strong></li>
<li>命令行模式类型<ol>
<li>:ex命令[^excmdindex]</li>
<li>/查找匹配</li>
<li><c-r>=表达式</c-r></li>
</ol>
</li>
<li>命令行模式快捷键</li>
</ul>
<table>
<thead>
<tr>
<th>按键操作</th>
<th>用途</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>&lt;c-w&gt;</code></td>
<td>删除至上个单词</td>
</tr>
<tr>
<td><code>&lt;c-u&gt;</code></td>
<td>删除至开头</td>
</tr>
<tr>
<td><code>&lt;c-v&gt;</code> <code>&lt;c-k&gt;</code></td>
<td>插入键盘找不到的字符</td>
</tr>
<tr>
<td><code>&lt;c-r&gt;{register}</code></td>
<td>插入寄存器内容</td>
</tr>
</tbody>
</table>
<ul>
<li>常用命令行模式命令</li>
</ul>
<table>
<thead>
<tr>
<th>按键操作</th>
<th>用途</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>:[range]delete [x]</code></td>
<td>删除指定范围内的行[到寄存器x中]</td>
</tr>
<tr>
<td><code>:[range]yank [x]</code></td>
<td>复制指定范围的行[到寄存器x中]</td>
</tr>
<tr>
<td><code>:[line]put [x]</code></td>
<td>在指定行后粘贴寄存器x中的内容</td>
</tr>
<tr>
<td><code>:[range]copy {address}</code></td>
<td>把指定范围内的行拷贝到{address}所指定的行之下</td>
</tr>
<tr>
<td><code>:[range]move {address}</code></td>
<td>把指定范围内的行移动到{address}所指定的行之下</td>
</tr>
<tr>
<td><code>:[range]join</code></td>
<td>连接指定范围内的行</td>
</tr>
<tr>
<td><code>:[range]normal {commands}</code></td>
<td>对指定范围内的每一行执行普通模式命令{commands}</td>
</tr>
<tr>
<td><code>:[range]substitute/{pattern}/{string}/[flags]</code></td>
<td>把指定范围内出现{pattern}的地方替换为{string}</td>
</tr>
<tr>
<td><code>:[range]global/{pattern}/[cmd]</code></td>
<td>对指定范围内匹配{pattern}的所有行，在其上执行Ex命令{cmd}</td>
</tr>
</tbody>
</table>
<h4 id="2-4-2_在一行或多个连续行上执行命令">2.4.2 在一行或多个连续行上执行命令</h4><ul>
<li>可以用<strong>行号</strong>，<strong>位置标记</strong>或<strong>查找模式</strong>来指定范围开始结束位置，[range]</li>
<li><code>:print</code>打印命令</li>
<li>行号指定范围：<ul>
<li><code>:n</code></li>
<li><code>:n,m</code></li>
<li><code>:.</code> 当前行</li>
<li><code>:$</code> 最后一行</li>
<li><code>:%</code> 所有行</li>
</ul>
</li>
<li>高亮选区指定范围:<code>&#39;&lt;,&#39;&gt;</code></li>
<li>用模式指定范围:<code>/{pattern}/,/{pattern}/</code></li>
<li>用偏移对地址进行修正:<code>{address}+n</code></li>
</ul>
<table>
<thead>
<tr>
<th>符号</th>
<th>地址</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>1</code></td>
<td>文件第一行</td>
</tr>
<tr>
<td><code>$</code></td>
<td>文件最后一行</td>
</tr>
<tr>
<td><code>0</code></td>
<td>虚拟行，位于文件第一行上方</td>
</tr>
<tr>
<td><code>.</code></td>
<td>光标所在行</td>
</tr>
<tr>
<td><code>&#39;m</code></td>
<td>包含位置标记m的行</td>
</tr>
<tr>
<td><code>&#39;&lt;</code></td>
<td>高亮选区的起始行</td>
</tr>
<tr>
<td><code>&#39;&gt;</code></td>
<td>高亮选区的结束行</td>
</tr>
<tr>
<td><code>%</code></td>
<td>整个文件（<code>:1,$</code>的简写形式）</td>
</tr>
</tbody>
</table>
<h4 id="2-4-3_使用:t和:m命令复制和移动行">2.4.3 使用<code>:t</code>和<code>:m</code>命令复制和移动行</h4><ul>
<li><code>:[range]copy {address}</code>（<code>:[range]t {address}</code>）</li>
<li><code>:[range]move {address}</code></li>
<li><strong>Ex命令影响范围广且距离远</strong></li>
</ul>
<h4 id="2-4-4_在指定范围上执行普通模式命令">2.4.4 在指定范围上执行普通模式命令</h4><ul>
<li><code>:[range]normal {commands}</code></li>
</ul>
<h4 id="2-4-5_重复上次的Ex命令">2.4.5 重复上次的Ex命令</h4><ul>
<li><code>@:</code>[^@:]</li>
<li><code>:</code>[^hquote:]寄存器总是保存着最后执行的命令行命令</li>
<li><code>@@</code>调用上次执行的寄存器宏</li>
<li><code>&lt;C-o&gt;</code>回退</li>
<li><code>:bn[ext]</code>缓冲区正向移动</li>
<li><code>bp[revious]</code>缓冲区反向移动</li>
</ul>
<h4 id="2-4-6_自动补全Ex命令[^commandcomplete]">2.4.6 自动补全Ex命令[^commandcomplete]</h4><ul>
<li><code>&lt;Tab&gt;</code>，<code>&lt;S-Tab&gt;</code>自动补全</li>
<li><code>&lt;C-d&gt;</code>[^cctrld]显示可用补全列表</li>
<li>自定义补全行为[^wildmode]</li>
<li><strong>bash shell</strong> <code>set wildmode=longest,list</code></li>
<li><strong>zsh</strong> <code>set wildmenu wildmode=full</code></li>
<li><strong>wildmenu</strong>启用时<code>&lt;Tab&gt;</code> <code>&lt;C-n&gt;</code> <code>&lt;Right&gt;</code>与<code>&lt;S-Tab&gt;</code> <code>&lt;C-p&gt;</code> <code>&lt;Left&gt;</code>遍历</li>
</ul>
<h4 id="2-4-7_把当前单词插入到命令行">2.4.7 把当前单词插入到命令行</h4><ul>
<li><code>&lt;C-r&gt;&lt;C-w&gt;</code>复制光标下单词并插入命令行</li>
<li><code>*</code>命令等效于输入<code>/\&lt;&lt;C-r&gt;&lt;C-w&gt;\&gt;&lt;CR&gt;</code></li>
<li><code>&lt;C-r&gt;&lt;C-a&gt;</code>[^cctrlrctrlw]插入光标下的字符串到命令行</li>
</ul>
<h4 id="2-4-8_回溯历史命令">2.4.8 回溯历史命令</h4><ul>
<li><code>:</code> —&gt; <code>&lt;Up&gt;</code> or <code>&lt;Down&gt;</code>遍历命令历史，可加字符过滤</li>
<li><code>/</code> —&gt; <code>&lt;Up&gt;</code> or <code>&lt;Down&gt;</code>遍历查找历史，可加字符过滤</li>
<li><code>history</code>选项，设置历史记录保存上限</li>
<li>历史记录退出重启后仍旧存在~！[^viminfo]</li>
<li>回溯时可以使用<code>&lt;C-p&gt;</code>或<code>&lt;C-n&gt;</code>遍历，只不过不会自动过滤</li>
<li>通过 <code>cnoremap &lt;C-p&gt; &lt;Up&gt; cnoremap &lt;-n&gt; &lt;Down&gt;</code>可以解决过滤的问题<a href="`ex_mode/history-scrollers.vim`">^phistoryscrollers</a></li>
<li>命令行窗口[^cmdwin]</li>
</ul>
<table>
<thead>
<tr>
<th>命令</th>
<th>动作</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>q/</code></td>
<td>打开查找命令历史的命令行窗口</td>
</tr>
<tr>
<td><code>q:</code></td>
<td>打开Ex命令历史的命令行窗口</td>
</tr>
<tr>
<td><code>&lt;C-f&gt;</code></td>
<td>从命令行模式切换到命令行窗口</td>
</tr>
<tr>
<td><code>:q</code></td>
<td>退出命令行窗口</td>
</tr>
<tr>
<td><code>&lt;CR&gt;</code></td>
<td>退出命令行窗口，并执行命令</td>
</tr>
</tbody>
</table>
<h4 id="2-4-9_运行Shell命令">2.4.9 运行Shell命令</h4><ul>
<li><code>%</code>代表当前文件名[^cmdlinespecial]</li>
<li>文件名修饰符[^filenamemodifiers]</li>
<li><code>&lt;C-z&gt;</code>在shell的vim中转入后台</li>
<li><code>fg</code>恢复</li>
<li><code>jobs</code>显示挂起的作业文件（man bash 作业控制job control）</li>
</ul>
<table>
<thead>
<tr>
<th>按键操作</th>
<th>用途</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>:shell</code>[^hshell]</td>
<td>启动一个shell(exit返回vim)</td>
</tr>
<tr>
<td><code>:!{cmd}</code>[^:!]</td>
<td>在shell中执行{cmd}</td>
</tr>
<tr>
<td><code>:read !{cmd}</code>[^read!]</td>
<td>在shell中执行{cmd},并把其标准输出插入到光标下方</td>
</tr>
<tr>
<td><code>:[range]write !{cmd}</code>[^writec]</td>
<td>在shell中执行{cmd},以[range]作为其标准输入</td>
</tr>
<tr>
<td><code>:write !sh</code>[^renamefiles]</td>
<td>在shell中执行缓冲区的每行内容</td>
</tr>
<tr>
<td><code>:[range]!{filter}</code>[^range!]</td>
<td>使用外部程序{filter}过滤指定的[range]</td>
</tr>
<tr>
<td><code>!{motion}</code>[^!]</td>
<td>切换到命令行，并设置{motion}范围</td>
</tr>
<tr>
<td><code>:2,$!sort -t &#39;,&#39; -k2</code></td>
<td>/</td>
</tr>
</tbody>
</table>
<h2 id="3-_管理多个文件">3. 管理多个文件</h2><h3 id="3-1_用缓冲区列表管理打开的文件">3.1 用缓冲区列表管理打开的文件</h3><h4 id="3-1-1_ls列出缓冲区列表[^ls]">3.1.1 <code>ls</code>列出缓冲区列表[^ls]</h4><ul>
<li><code>%</code>当前窗口可见</li>
<li><code>#</code>轮换文件</li>
<li><code>&lt;C-^&gt;</code>轮换文件间快速切换</li>
</ul>
<h4 id="3-1-2_使用缓冲区列表：">3.1.2 使用缓冲区列表：</h4><ul>
<li><code>:bprev</code></li>
<li><code>:bnext</code></li>
<li><code>:bfirst</code></li>
<li><code>:blast</code></li>
<li><code>:buffer N</code>[^:b]</li>
<li><code>:buffer {bufname}</code> 只需要提供足够标识的字符</li>
<li><code>:bufdo</code>[^:bufdo] 所有缓冲区执行Ex命令</li>
<li>映射缓冲区列表操作快捷键[^punimpaired]<ul>
<li><code>nnoremap &lt;silent&gt; [b :bprevious&lt;CR&gt;</code></li>
<li><code>nnoremap &lt;silent&gt; ]b :bnext&lt;CR&gt;</code></li>
<li><code>nnoremap &lt;silent&gt; [B :bfirst&lt;CR&gt;</code></li>
<li><code>nnoremap &lt;silent&gt; ]B :blast&lt;CR&gt;</code></li>
</ul>
</li>
</ul>
<h4 id="3-1-3_删除缓冲区">3.1.3 删除缓冲区</h4><ul>
<li><code>:bdelete N1 N2 N3</code></li>
<li><code>:N,M bdelete</code></li>
</ul>
<h3 id="3-2_用参数列表将缓冲区分组">3.2 用参数列表将缓冲区分组</h3><ul>
<li><code>:args</code>显示参数列表</li>
<li><code>:args {arglist}</code>[^argsf]接填充参数列表</li>
<li><code>:args *</code>用Glob(通配符)<code>*</code>[^hwildcard] <code>**</code>[^hstarstarwildcard]指定文件</li>
<li><code>:args `{shell commands}` </code>用反引号结构指定文件[^backtick-expansion]</li>
<li>使用参数列表<code>:next</code>，<code>:prev</code>，<code>:argdo</code></li>
</ul>
<h3 id="3-3_管理隐藏缓冲区">3.3 管理隐藏缓冲区</h3><table>
<thead>
<tr>
<th>按键操作</th>
<th>用途</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>:w[rite]</code></td>
<td>把缓冲区内容写入磁盘</td>
</tr>
<tr>
<td><code>:e[dit]!</code></td>
<td>把磁盘文件内容读入缓冲区</td>
</tr>
<tr>
<td><code>:qa[ll]!</code></td>
<td>关闭所有窗口，摒弃修改而无需警告</td>
</tr>
<tr>
<td><code>:bn[ext]!</code></td>
<td>隐藏当前缓冲区并切换到下一个</td>
</tr>
<tr>
<td><code>:bp[revious]!</code></td>
<td>隐藏当前缓冲区并切换到上一个</td>
</tr>
<tr>
<td><code>set hidden</code>[^hidden]</td>
<td>启用默认自动隐藏缓冲区</td>
</tr>
<tr>
<td><code>wn</code></td>
<td>逐个保存</td>
</tr>
</tbody>
</table>
<h3 id="3-4_将工作区切分成窗口">3.4 将工作区切分成窗口</h3><table>
<thead>
<tr>
<th>按键操作</th>
<th>用途</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>&lt;C-w&gt;s</code></td>
<td>水平切分当前窗口，新窗口仍显示当前缓冲区</td>
</tr>
<tr>
<td><code>&lt;C-w&gt;v</code></td>
<td>垂直切分当前窗口，新窗口仍显示当前缓冲区</td>
</tr>
<tr>
<td><code>sp[lit] {file}</code></td>
<td>水平切分当前窗口，并在新窗口中载入{file}</td>
</tr>
<tr>
<td><code>vsp[lit] {file}</code></td>
<td>垂直切分当前窗口，并在新窗口中载入{file}</td>
</tr>
<tr>
<td><code>&lt;C-w&gt;w</code>[^windowmovecursor]</td>
<td>在窗口间循环切换</td>
</tr>
<tr>
<td><code>&lt;C-w&gt;h</code></td>
<td>切换到左边的窗口[^mouse]</td>
</tr>
<tr>
<td><code>&lt;C-w&gt;j</code></td>
<td>切换到下边的窗口</td>
</tr>
<tr>
<td><code>&lt;C-w&gt;k</code></td>
<td>切换到上边的窗口</td>
</tr>
<tr>
<td><code>&lt;C-w&gt;l</code></td>
<td>切换到右边的窗口</td>
</tr>
<tr>
<td><code>:clo[se]</code> <code>&lt;C-w&gt;c</code></td>
<td>关闭活动窗口</td>
</tr>
<tr>
<td><code>:on[ly]</code> <code>&lt;C-w&gt;o</code></td>
<td>只保留活动窗口，关闭其他所有窗口</td>
</tr>
<tr>
<td><code>:h window-resize</code></td>
<td>\</td>
</tr>
<tr>
<td><code>&lt;C-w&gt;=</code></td>
<td>使所有窗口等宽、等高</td>
</tr>
<tr>
<td><code>&lt;C-w&gt;_</code></td>
<td>最大化活动窗口的高度</td>
</tr>
<tr>
<td><code>&lt;C-w&gt;｜</code></td>
<td>最大化活动窗口的宽度</td>
</tr>
<tr>
<td><code>[N]&lt;C-w&gt;_</code></td>
<td>把活动窗口的高度设为[N]行</td>
</tr>
<tr>
<td><code>[N]&lt;C-w&gt;｜</code></td>
<td>把活动窗口的宽度设为[N]列</td>
</tr>
<tr>
<td><code>:h window-moving</code></td>
<td>\</td>
</tr>
</tbody>
</table>
<h3 id="3-5_用标签页将窗口分组[^tabpage]">3.5 用标签页将窗口分组[^tabpage]</h3><table>
<thead>
<tr>
<th>按键操作</th>
<th>用途</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>:lcd {path}</code></td>
<td>设置当前窗口的本地工作目录</td>
</tr>
<tr>
<td><code>:windo lcd {path}</code></td>
<td>所有窗口设置本地工作目录</td>
</tr>
<tr>
<td><code>:tabe[dit] {filename}</code></td>
<td>在新标签页中打开{filename}</td>
</tr>
<tr>
<td><code>&lt;C-w&gt;T</code></td>
<td>把当前窗口移到一个新标签页[^ctrlwT]</td>
</tr>
<tr>
<td><code>:tabc[lose]</code></td>
<td>关闭当前标签页及其中的所有窗口</td>
</tr>
<tr>
<td><code>tabo[nly]</code></td>
<td>只保留活动标签页，关闭所有其他标签页</td>
</tr>
<tr>
<td><code>:tabn[ext] {N}</code> <code>{N}gt</code></td>
<td>切换到下一标签页</td>
</tr>
<tr>
<td><code>:tabn[ext]</code> <code>gt</code></td>
<td>切换到下一标签页</td>
</tr>
<tr>
<td><code>:tabp[revious]</code> <code>gT</code></td>
<td>切换到下一标签页</td>
</tr>
<tr>
<td><code>:tabmove [N]</code></td>
<td>移动标签页，0移到开头，省略[N]移到结尾</td>
</tr>
</tbody>
</table>
<h2 id="4-_打开和保存文件">4. 打开和保存文件</h2><h3 id="4-1_用edit命令打开文件">4.1 用edit命令打开文件</h3><ul>
<li><code>:pwd</code>显示当前目录print working directory</li>
<li><strong>tab</strong>键展开</li>
<li><code>:edit %:h&lt;Tab&gt;</code>相对于活动目录打开文件<blockquote>
<p><code>cnoremap &lt;expr&gt; %% getcmdtype() == &#39;:&#39; ? expand(&#39;%:h&#39;).&#39;/&#39; : &#39;%%&#39;</code></p>
</blockquote>
</li>
</ul>
<h3 id="4-2_使用find打开文件">4.2 使用find打开文件</h3><ul>
<li><code>:find</code>允许通过文件名打开文件</li>
<li><code>set path+=app/**</code>配置’path’路径[^hpath][^filesearching]</li>
<li>rails的智能路径管理[^prails]</li>
</ul>
<h3 id="4-3_使用netrw管理文件系统">4.3 使用netrw管理文件系统</h3><ul>
<li>准备工作：<code>set nocompatible  filetype plugin on</code></li>
<li><code>-</code>返回上级目录</li>
<li><p>打开文件管理目录</p>
<ul>
<li><code>:edit {path}</code>，<code>:edit .</code>，<code>:edit %:h</code>，<code>:e</code></li>
<li><code>:Explore</code>[^explore] <code>:E</code></li>
<li><code>:Sexplore</code>，<code>:Vexplore</code></li>
</ul>
</li>
<li><p>与分割窗口协同工作<code>&lt;C-^&gt;</code></p>
</li>
<li>使用netrw完成更多功能<ul>
<li>创建新文件[^netrw%]</li>
<li>创建新目录[^netrwd]</li>
<li>重命名已有的文件及目录[^netrwrename]</li>
<li>删除[^netrwdel]</li>
<li>通过网络读写文件scp,ftp,curl,wget[^netrwref]</li>
</ul>
</li>
</ul>
<h3 id="4-4_把文件保存到不存在的目录中">4.4 把文件保存到不存在的目录中</h3><ul>
<li><code>&lt;C-g&gt;</code>显示当前文件的文件名及状态[^ctrlG]（</li>
<li><code>:!mkdir -p %:h</code></li>
<li><code>:write</code></li>
</ul>
<h3 id="4-5_以超级用户权限保存文件">4.5 以超级用户权限保存文件</h3><ul>
<li><code>ls -al /etc/|grep hosts</code>，<code>whoami</code></li>
<li><code>:w !sudo tee % &gt; /dev/null</code>[^writec][^:%]</li>
</ul>
<hr>
<h2 id="5-_移动跳转[^motion]">5. 移动跳转[^motion]</h2><h3 id="5-1_用动作命令在文档中移动">5.1 用动作命令在文档中移动</h3><h4 id="5-1-1_让手指保持在本位行上">5.1.1 让手指保持在本位行上</h4><blockquote>
<p>hjkl;</p>
</blockquote>
<h4 id="5-1-2_区分实际行与屏幕行">5.1.2 区分实际行与屏幕行</h4><ul>
<li><code>&#39;wrap&#39;</code>，<code>&#39;number&#39;</code></li>
<li><code>j</code>，<code>k</code>，<code>0</code>，<code>^</code>，<code>$</code>，<code>gj</code>，<code>gk</code>，<code>g0</code>，<code>g^</code>，<code>g$</code></li>
</ul>
<h4 id="5-1-3_基于单词移动[^wordmotions]">5.1.3 基于单词移动[^wordmotions]</h4><ul>
<li><code>w</code>，<code>b</code>，<code>e</code>，<code>g</code>e面向单词移动，词首词尾，正向反向</li>
<li><code>W</code>,<code>B</code>,<code>E</code>,<code>gE</code>面向字串移动</li>
<li>理解单词(word)[^word]与字串(WORD)[^WORD]</li>
</ul>
<h4 id="5-1-4_对字符进行查找">5.1.4 对字符进行查找</h4><ul>
<li><code>f</code>[^f] <code>;</code>[^;] <code>,</code>[^,]</li>
<li><code>noremap &lt;Leader&gt;n nzz</code></li>
<li><p><code>noremap &lt;Leader&gt;N Nzz</code></p>
<ul>
<li><code>&lt;Leader&gt;</code>默认<code>\</code>[^mapleader]</li>
<li><code>let mapleader=&quot;,&quot;</code> </li>
<li>normal \ ,</li>
</ul>
</li>
<li><p><code>f{motion}</code>，<code>F{motion}</code>，<code>t{motion}</code>，<code>T{motion}</code>，<code>;</code>，<code>,</code></p>
</li>
</ul>
<h4 id="5-1-5_通过查找进行移动">5.1.5 通过查找进行移动</h4><ul>
<li><code>/{char}&lt;CR&gt;</code></li>
<li><code>n</code></li>
<li><code>N</code></li>
<li><code>&#39;hlsearch&#39;</code></li>
<li><code>&#39;incsearch&#39;</code></li>
<li>用查找动作操作文本[^exclusive]<ul>
<li><code>v/{char}&lt;CR&gt;hd</code></li>
<li><code>d/{char}&lt;CR&gt;</code></li>
</ul>
</li>
</ul>
<h4 id="5-1-6_用精确的文本对象选择选区[^textobjects]">5.1.6 用精确的文本对象选择选区[^textobjects]</h4><table>
<thead>
<tr>
<th>文本对象</th>
<th>选择区域</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>a)</code> <code>ab</code></td>
<td>一对圆括号(parentheses)</td>
</tr>
<tr>
<td><code>i)</code> <code>ib</code></td>
<td>圆括号内部</td>
</tr>
<tr>
<td><code>a}</code> <code>aB</code></td>
<td>一对花括号{braces}</td>
</tr>
<tr>
<td><code>i}</code> <code>iB</code></td>
<td>花括号内部</td>
</tr>
<tr>
<td><code>a]</code></td>
<td>一对方括号[brackets]</td>
</tr>
<tr>
<td><code>i]</code></td>
<td>方括号内部</td>
</tr>
<tr>
<td><code>a&gt;</code></td>
<td>一对尖括号<angle brackets=""></angle></td>
</tr>
<tr>
<td><code>i&gt;</code></td>
<td>尖括号内部</td>
</tr>
<tr>
<td><code>a&#39;</code></td>
<td>一对单引号’single quotes’</td>
</tr>
<tr>
<td><code>i&#39;</code></td>
<td>单引号内部</td>
</tr>
<tr>
<td><code>a&quot;</code></td>
<td>一对双引号”double quotes”</td>
</tr>
<tr>
<td><code>i&quot;</code></td>
<td>双引号内部</td>
</tr>
<tr>
<td><code>a` </code></td>
<td>一对反引号`backticks`</td>
</tr>
<tr>
<td><code>i` </code></td>
<td>反引号内部</td>
</tr>
<tr>
<td><code>at</code></td>
<td>一对XML标签tags</td>
</tr>
<tr>
<td><code>it</code></td>
<td>标签内部</td>
</tr>
</tbody>
</table>
<h4 id="5-1-7_删除周边，修改内部">5.1.7 删除周边，修改内部</h4><ul>
<li>分隔符文本对象，块对象</li>
<li>范围文本对象，非块对象</li>
<li>d配a,c配i</li>
</ul>
<table>
<thead>
<tr>
<th>文本对象</th>
<th>选择范围</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>iw</code></td>
<td>当前单词</td>
</tr>
<tr>
<td><code>aw</code></td>
<td>当前单词及一个空格</td>
</tr>
<tr>
<td><code>iW</code></td>
<td>当前字串</td>
</tr>
<tr>
<td><code>aW</code></td>
<td>当前字串及一个空格</td>
</tr>
<tr>
<td><code>is</code></td>
<td>当前句子</td>
</tr>
<tr>
<td><code>as</code></td>
<td>当前句子及一个空格</td>
</tr>
<tr>
<td><code>ip</code></td>
<td>当前段落</td>
</tr>
<tr>
<td><code>ap</code></td>
<td>当前段落及一个空行</td>
</tr>
</tbody>
</table>
<h4 id="5-1-8_设置位置标记[^markmotion]，以便快速跳回">5.1.8 设置位置标记[^markmotion]，以便快速跳回</h4><ul>
<li><code>m{a-zA-Z}</code>[^m]小写缓冲区局部可见，大写全局可见</li>
<li><code>`{mark}</code>跳转到位置标记所在行，首个非空字符上</li>
<li><code>&#39;{mark}</code>跳转到位置标记所在位置</li>
<li>自动位置标记</li>
</ul>
<table>
<thead>
<tr>
<th>位置标记</th>
<th>跳转到</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>&quot;</code></td>
<td>当前文件中上次跳转动作之前的位置</td>
</tr>
<tr>
<td><code>.</code></td>
<td>上次修改的地方</td>
</tr>
<tr>
<td><code>^</code></td>
<td>上次插入的地方</td>
</tr>
<tr>
<td><code>[</code></td>
<td>上次修改或复制的起始位置</td>
</tr>
<tr>
<td><code>]</code></td>
<td>上次修改或复制的结束位置</td>
</tr>
<tr>
<td><code>&lt;</code></td>
<td>上次高亮选区的起始位置</td>
</tr>
<tr>
<td><code>&gt;</code></td>
<td>上次高亮选区的结束位置</td>
</tr>
</tbody>
</table>
<h4 id="5-1-9_在匹配括号间跳转">5.1.9 在匹配括号间跳转</h4><ul>
<li><strong>matchit.vim</strong>插件，对tags的跳转[^matchitinstall]</li>
</ul>
<figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> nocompatible</span><br><span class="line"><span class="keyword">filetype</span> plugin <span class="keyword">on</span></span><br><span class="line"><span class="keyword">runtime</span> macros/matchit.<span class="keyword">vim</span></span><br></pre></td></tr></table></figure>
<ul>
<li>%对一组开、闭括号间跳转[^%]</li>
<li>Surround.vim，给选中的文本加分隔符<code>S&quot;</code></li>
</ul>
<h3 id="5-2_在文件间跳转">5.2 在文件间跳转</h3><h4 id="5-2-1_遍历跳转列表">5.2.1 遍历跳转列表</h4><ul>
<li><code>:jumps</code>显示跳转列表</li>
<li><strong>大范围动作命令会被当成跳转，小范围的动作命令只算移动</strong></li>
<li>每个单独窗口拥有一份跳转列表</li>
<li><font color="red">注意</font><strong><code>&lt;C-i&gt;</code>和<code>&lt;Tab&gt;</code>被当成同一个东西</strong></li>
<li><code>&lt;C-o&gt;</code> <code>&lt;C-i&gt;</code></li>
</ul>
<table>
<thead>
<tr>
<th>按键操作</th>
<th>用途</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>{count}G</code></td>
<td>跳转到指定行号</td>
</tr>
<tr>
<td><code>/pattern&lt;CR&gt;/?pattern&lt;CR&gt;</code> <code>n</code> <code>N</code></td>
<td>跳转到下一个/上一个模式出现之处</td>
</tr>
<tr>
<td><code>%</code></td>
<td>跳转到匹配括号所在之处</td>
</tr>
<tr>
<td><code>(</code> <code>)</code></td>
<td>跳转到上一个/下一句的开头</td>
</tr>
<tr>
<td><code>{</code> <code>}</code></td>
<td>跳转到上一段/下一段的开头</td>
</tr>
<tr>
<td><code>H</code> <code>M</code> <code>L</code></td>
<td>跳到屏幕最上方/正中间/最下方</td>
</tr>
<tr>
<td><code>gf</code></td>
<td>跳转到光标下的文件名</td>
</tr>
<tr>
<td><code>&lt;C-]&gt;</code></td>
<td>跳转到光标下关键字的定义之处</td>
</tr>
<tr>
<td><code>`{mark}</code> <code>&#39;{mark}</code></td>
<td>跳转到一个位置标记</td>
</tr>
</tbody>
</table>
<h4 id="5-2-2_遍历改变列表">5.2.2 遍历改变列表</h4><ul>
<li><code>:changes</code>[^changelist]显示编辑会话期间维护的改变列表</li>
<li><code>g;</code>和<code>g,</code>遍历改变列表，类似<code>u&lt;C-r&gt;</code></li>
<li><code>:h &#39;.</code> <code>:h &#39;^</code> </li>
<li><code>gi</code>[^gi]回到退出的地方继续编辑</li>
<li>每个缓冲区单独维护一张表</li>
</ul>
<h4 id="5-2-3_跳转到光标下的文件[^gf]">5.2.3 跳转到光标下的文件[^gf]</h4><ul>
<li>指定文件扩展名<code>set suffixesadd+=.rb</code>[^suffixesadd]</li>
<li>指定要搜寻的目录[^path]<code>set path?</code>显示值</li>
<li>bundler.vim 使用工程的Gemfile自动生成”path”设置</li>
<li><code>vim -u NONE -N {file}</code>不加载任何插件启动vim<h4 id="5-2-4_用全局位置标记在文件间快速跳转">5.2.4 用全局位置标记在文件间快速跳转</h4></li>
</ul>
<blockquote>
<p>在浏览代码前先设置一个全局标记<code>:h &#39;</code> <code>:h m</code> <code>:h &#39;viminfo&#39;</code></p>
</blockquote>
<hr>
<h2 id="6-_寄存器">6. 寄存器</h2><h3 id="6-1_复制与粘贴">6.1 复制与粘贴</h3><h4 id="6-1-1_用无名寄存器实现删除、复制与粘贴操作">6.1.1 用无名寄存器实现删除、复制与粘贴操作</h4><ul>
<li><code>xp</code></li>
<li><code>ddp</code></li>
<li><code>yyp</code></li>
</ul>
<h4 id="6-1-2_深入理解Vim寄存器">6.1.2 深入理解Vim寄存器</h4><ul>
<li>引用一个寄存器<code>&quot;{register}</code>，缺省使用无名寄存器<code>&quot;&quot;</code></li>
<li>vim术语对照剪切(cut)=delete,复制(copy)=yank,粘贴(paste)=put</li>
<li><p>无名寄存器（<code>&quot;&quot;</code>）[^quotequote]</p>
<blockquote>
<p><code>x</code>,<code>s</code>,<code>d{motion}</code>,<code>c{motion}</code>与<code>y{motion}</code>以及它们的大写命令都会覆盖无名寄存器</p>
</blockquote>
</li>
<li><p>复制专用寄存器（<code>&quot;0</code>）[^quote0]</p>
<blockquote>
<p><code>y{motion}</code>命令时才会使用</p>
</blockquote>
</li>
<li><p><code>:reg &quot;{register}</code>显示寄存器内容</p>
</li>
<li>有名寄存器（<code>&quot;a</code>-<code>&quot;z</code>）[^quotealpha]，小写重写，大写追加</li>
<li>黑洞寄存器（<code>&quot;_</code>）[^quote_]，有去无回</li>
<li>系统剪切板（<code>&quot;+</code>）[^quote+]</li>
<li>选择专用寄存器（<code>&quot;*</code>）[^quotestar]</li>
<li>表达式寄存器（<code>&quot;=</code>）[^quote=]，计算并返回值</li>
<li>其他寄存器，只读，(<code>&quot;.</code>)[^quote.]</li>
<li><code>&quot;%</code>，<code>&quot;#</code>，<code>&quot;.</code>，<code>&quot;:</code>，<code>&quot;/</code></li>
</ul>
<h4 id="6-1-3_用寄存器中的内容替换高亮选区的文本">6.1.3 用寄存器中的内容替换高亮选区的文本</h4><blockquote>
<p><code>:h v_p</code></p>
</blockquote>
<h4 id="6-1-4_把寄存器的内容粘贴出来[^p]">6.1.4 把寄存器的内容粘贴出来[^p]</h4><ul>
<li>面向行还是面向字符[^linewiseregister]</li>
<li><code>&lt;C-r&gt;{register}</code>总插入到光标之前</li>
<li><code>gp</code>，<code>gP</code>，粘贴后光标在文本之后，更适合操作</li>
</ul>
<h4 id="6-1-5_与系统剪贴板进行交互[^paste]">6.1.5 与系统剪贴板进行交互[^paste]</h4><ul>
<li><code>:set pastetoggle=&lt;f5&gt;</code>使用f5切换”paste”选项</li>
<li>使用加号寄存器进行粘贴可以避免</li>
</ul>
<hr>
<h3 id="6-2_宏">6.2 宏</h3><h4 id="6-2-1_宏的读取与执行">6.2.1 宏的读取与执行</h4><ul>
<li><code>q{register}</code>,按<code>q</code>停止</li>
<li><code>@{register}</code>执行[^@],<code>@@</code>重复最近调用过的宏</li>
<li>串行，并行</li>
</ul>
<h4 id="6-2-2_规范光标位置、直达目标以及中止宏">6.2.2 规范光标位置、直达目标以及中止宏</h4><ul>
<li>确保每条命令都可被重复执行</li>
<li>规范光标的位置，更容易正确执行</li>
<li>用可重复的动作命令直达目标</li>
<li>当动作命令失败时，宏将中止执行[^visualbell]</li>
</ul>
<h4 id="6-2-3_加次数回放宏">6.2.3 加次数回放宏</h4><blockquote>
<p><code>n@{register}</code></p>
</blockquote>
<h4 id="6-2-4_在连续的文件行上重复修改">6.2.4 在连续的文件行上重复修改</h4><ul>
<li>串行：<code>n@{register}</code></li>
<li>并行：<code>:’&lt;,’&gt;normal @{register}</code></li>
</ul>
<h4 id="6-2-5_给宏追加命令">6.2.5 给宏追加命令</h4><blockquote>
<p>使用大写字母</p>
</blockquote>
<h4 id="6-2-6_在一组文件中执行宏">6.2.6 在一组文件中执行宏</h4><ul>
<li>准备工作</li>
</ul>
<figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> nocompatible</span><br><span class="line"><span class="keyword">filetype</span> plugin <span class="built_in">indent</span> <span class="keyword">on</span></span><br><span class="line"><span class="keyword">set</span> hidden</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">has</span>(<span class="string">"autocmd"</span>)</span><br><span class="line"><span class="keyword">autocmd</span> fileType <span class="keyword">ruby</span> <span class="keyword">setlocal</span> <span class="keyword">ts</span>=<span class="number">2</span> <span class="keyword">sts</span>=<span class="number">2</span> <span class="keyword">sw</span>=<span class="number">2</span> expandtab</span><br><span class="line"><span class="keyword">endif</span></span><br></pre></td></tr></table></figure>
<ul>
<li>启用”hidden”</li>
<li>建立目标文件列表<code>:args *.rb</code></li>
<li>录制宏<code>:first</code>，<code>:e!</code></li>
<li><code>:h :argdo</code> <code>:h :edit!</code></li>
<li><code>:argdo normal @a</code>并行执行宏</li>
<li><code>qA :next q 22@a</code>串行执行宏</li>
<li>保存所有文件改动<code>:h</code> <code>:wa</code> <code>:argdo write</code> <code>:h :wn</code></li>
</ul>
<h4 id="6-2-7_用迭代求值的方式给列表编号">6.2.7 用迭代求值的方式给列表编号</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">:let i=1</span><br><span class="line">qa</span><br><span class="line">I&lt;C-r&gt;=i&lt;CR&gt;)&lt;Esc&gt;</span><br><span class="line">:let i+= 1</span><br><span class="line">q</span><br><span class="line">jVG</span><br><span class="line">:normal @a</span><br></pre></td></tr></table></figure>
<h4 id="6-2-8_编辑宏的内容">6.2.8 编辑宏的内容</h4><ul>
<li><code>:put a</code>（put 总会将内容粘贴到下一行)</li>
<li><code>&quot;ay$</code>（dd会留下^J）</li>
<li><code>let @a=substitute(@a, &#39;\~&#39;, &#39;vU&#39;, &#39;g&#39;)</code>（:h substitute()）（:h function-list）</li>
</ul>
<hr>
<h2 id="7-_匹配">7. 匹配</h2><h3 id="7-1_按模式匹配及按原义匹配">7.1 按模式匹配及按原义匹配</h3><h4 id="7-1-1_调整查找模式的大小写敏感性">7.1.1 调整查找模式的大小写敏感性</h4><ul>
<li>全局设置大小写敏感性”<code>ignorecase</code>“（会影响关键字自动补全行为）</li>
<li><p>每次查找时设置大小写敏感（可以出现在元字符的任何位置）</p>
<ul>
<li><code>\c</code>忽略大小写</li>
<li><code>\C</code>强制区分大小写</li>
</ul>
</li>
<li><p>启用更智能的大小写敏感设置”<code>smartcase</code>“(:h /ignorecase)</p>
</li>
</ul>
<h4 id="7-1-2_按正则表达式查找时，使用\v模式开关">7.1.2 按正则表达式查找时，使用<code>\v</code>模式开关</h4><ul>
<li><strong>magic</strong>模式下，方括号具有特殊含义，不用转义，圆括号开闭都要转义，花括号只需开括号转义</li>
<li><strong>very magic</strong>模式除_ ，大小写字母以及数字0到9之外的所有字符都具有特殊意义（:h \v）</li>
<li><code>:h /character-classes</code></li>
<li><code>:h /\\</code>任何还未具有特殊含义的字符都被保留以被将来扩展时使用</li>
<li><code>\v</code> <strong>very magic</strong> <code>\V</code>原义 <code>\m</code> magic(<code>.</code>，<code>*</code>,方括号具有特殊含义） <code>\M</code> nomadic（一些字符具有特殊含义，<code>^</code>与<code>$</code>）</li>
</ul>
<h4 id="7-1-3_按原义查找文本时，使用\V原义开关">7.1.3 按原义查找文本时，使用<code>\V</code>原义开关</h4><blockquote>
<p><code>:h /\V</code></p>
</blockquote>
<h4 id="7-1-4_使用圆括号捕获子匹配">7.1.4 使用圆括号捕获子匹配</h4><ul>
<li><code>\0</code>全匹配，<code>\1</code>-<code>\9</code>匹配捕获的文本</li>
<li><code>:h /\_</code> <code>:h 27.8</code></li>
</ul>
<h4 id="7-1-5_界定单词的边界">7.1.5 界定单词的边界</h4><ul>
<li><code>&lt;</code>与<code>&gt;</code>符号表示单词定界符</li>
<li>使用圆括号但不捕获内容在括号前加<code>%</code></li>
<li><code>\W\ze\w</code>模拟元字符<code>&lt;</code>，<code>\w\ze\W</code>表示元字符<code>&gt;</code></li>
<li><code>&lt;</code>与<code>&gt;</code>只在very magic下不用转义<code>:h /\&lt;</code></li>
<li><code>*</code>与<code>#</code>查找光标下单词，有用到单词定界符</li>
<li><code>g*</code>与<code>g#</code>同上，但不使用单词定界符</li>
<li>零宽度元字符，本身不匹配字符，表示单词与围绕此单词的空白字符之间的边界</li>
</ul>
<h4 id="7-1-6_界定匹配的边界">7.1.6 界定匹配的边界</h4><ul>
<li><code>\zs</code>匹配开始<code>:h /\zs</code></li>
<li><code>\ze</code>匹配结束</li>
</ul>
<h4 id="7-1-7_转义问题字符">7.1.7 转义问题字符</h4><ul>
<li><code>\V</code>下正向查找需转义<code>/</code>与<code>\</code></li>
<li><code>\V</code>下反向查找需转义<code>?</code>与<code>\</code></li>
<li>用编程的方式转义字符<code>:h escape()</code> <code>:h getcmdtype()</code></li>
</ul>
<figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/\V&lt;C-<span class="keyword">r</span>&gt;=</span><br><span class="line">=<span class="built_in">escape</span>(@u, <span class="built_in">getcmdtype</span>().’\’)</span><br></pre></td></tr></table></figure>
<ul>
<li><code>/vim/e&lt;CR&gt;</code></li>
<li>GVim <code>:promptfind</code>（:h :promptfind）</li>
</ul>
<h3 id="7-2_查找">7.2 查找</h3><h4 id="7-2-1_结识查找命令">7.2.1 结识查找命令</h4><p>“<code>wrapscan</code>“  <code>:h &#39;wrapscan&#39;</code></p>
<table>
<thead>
<tr>
<th>按键操作</th>
<th>用途</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>n</code></td>
<td>跳至下一处匹配，保持查找方向与偏移不变</td>
</tr>
<tr>
<td><code>N</code></td>
<td>跳至上一处匹配，保持查找方向与偏移不变</td>
</tr>
<tr>
<td><code>/&lt;CR&gt;</code></td>
<td>正向跳转至相同模式的下一处匹配</td>
</tr>
<tr>
<td><code>?&lt;CR&gt;</code></td>
<td>反向跳转至相同模式的上一处匹配</td>
</tr>
</tbody>
</table>
<h4 id="7-2-2_高亮查找匹配">7.2.2 高亮查找匹配</h4><ul>
<li><code>:h &#39;hlsearch&#39;</code> 启用匹配高亮</li>
<li><code>:set nohlsearch</code>(<code>:se hls!</code>) 禁用匹配高亮</li>
<li><code>:nohlsearch</code> <code>:h noh</code> 临时关闭匹配高亮</li>
<li><code>nnoremap &lt;silent&gt; &lt;C-l&gt; :&lt;C-u&gt;nohlsearch&lt;CR&gt;&lt;C-l&gt;(:h CTRL-L)</code></li>
</ul>
<h4 id="7-2-3_在执行查找前预览第一处匹配">7.2.3 在执行查找前预览第一处匹配</h4><ul>
<li><code>:h &#39;incsearch&#39;</code> 增量匹配</li>
<li><code>&lt;C-r&gt;&lt;C-w&gt;</code>查找域自动补全</li>
</ul>
<h4 id="7-2-4_统计当前模式的匹配个数">7.2.4 统计当前模式的匹配个数</h4><blockquote>
<p><code>:%s///gn</code></p>
</blockquote>
<h4 id="7-2-5_将光标偏移到查找匹配结尾">7.2.5 将光标偏移到查找匹配结尾</h4><ul>
<li><code>:h search-offset</code></li>
<li><code>/{pattern}/e&lt;CR&gt;</code></li>
</ul>
<h4 id="7-2-6_对完整的查找匹配进行操作">7.2.6 对完整的查找匹配进行操作</h4><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">/\vX(ht)?ml\C&lt;CR&gt;</span><br><span class="line">gU//<span class="keyword">e</span>&lt;CR&gt;</span><br><span class="line">//&lt;CR&gt;</span><br><span class="line">.</span><br><span class="line">//&lt;CR&gt;.</span><br></pre></td></tr></table></figure>
<ul>
<li><code>//&lt;CR&gt;</code>,<code>n</code>会重复<code>//e&lt;CR&gt;</code>所以不适合点范式</li>
<li>Natsuno textobj-laastpat插件<code>gUi/</code>解决了上面问题</li>
</ul>
<h4 id="7-2-7_利用查找历史，迭代完成复杂的模式">7.2.7 利用查找历史，迭代完成复杂的模式</h4><ul>
<li><code>/&lt;UP&gt;</code>遍历查找历史</li>
<li><code>q/</code>在命令行窗口修改</li>
<li><code>c%(&lt;C-r&gt;&quot;)&lt;Esc&gt;</code></li>
<li><code>:%s//&quot;\1&quot;/g</code></li>
</ul>
<h4 id="7-2-8_查找当前高亮选区中的文本">7.2.8 查找当前高亮选区中的文本</h4><ul>
<li><code>:h visual-search</code></li>
<li><code>:vmap X y/&lt;C-R&gt;&quot;&lt;CR&gt;</code>（某些特殊字符”<code>.</code>“或”<code>*</code>“通常会引起问题）</li>
<li>解决方案：</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">xnoremap *:&lt;C-u&gt;call &lt;SID&gt;VSetSearch()&lt;CR&gt;/&lt;C-R&gt;=@/&lt;CR&gt;&lt;CR&gt;</span><br><span class="line">xnoremap #:&lt;C-u&gt;call &lt;SID&gt;VSetSearch()&lt;CR&gt;?&lt;C-R&gt;=@/&lt;CR&gt;&lt;CR&gt;</span><br><span class="line">function! s:VsetSearch()</span><br><span class="line">   let temp = @s</span><br><span class="line">   norm! gv"sy</span><br><span class="line">   let @/ = '\V' .substitute(escape(@s, '/\'), '\n', '\\n', 'g')</span><br><span class="line">   let @s = temp</span><br><span class="line">endfunction</span><br></pre></td></tr></table></figure>
<ul>
<li><strong>visual star search</strong>插件</li>
<li><code>xnoremap</code>关键字指明映射项只在可视模式下有效，不包括选择模式</li>
<li><code>:h mapmode-x</code></li>
</ul>
<h3 id="7-3_替换">7.3 替换</h3><h4 id="7-3-1_结识substitute命令">7.3.1 结识substitute命令</h4><ul>
<li><code>:[range]s[ubstitute]/{pattern}/{string}/[flags]</code></li>
<li><p>标志位<code>:h s_flags</code></p>
<ul>
<li><code>g</code>，全局执行</li>
<li><code>c</code>，确认或拒绝</li>
<li><code>n</code>，抑制正常替换行为，即不执行替换操作，只报告匹配次数</li>
<li><code>e</code>，屏蔽错误提示</li>
<li><code>&amp;</code>，重用上一次的标志位</li>
</ul>
</li>
<li><p>特殊字符<code>:h sub-replace-special</code></p>
</li>
</ul>
<table>
<thead>
<tr>
<th>符号</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>\r</code></td>
<td>插入一个换行符</td>
</tr>
<tr>
<td><code>\t</code></td>
<td>插入一个制表符</td>
</tr>
<tr>
<td><code>\\</code></td>
<td>插入一个反斜杠</td>
</tr>
<tr>
<td><code>\n</code></td>
<td>插入第n个子匹配n为1-9</td>
</tr>
<tr>
<td><code>\0</code></td>
<td>插入匹配模式的所有内容</td>
</tr>
<tr>
<td><code>&amp;</code></td>
<td>插入匹配模式的所有内容</td>
</tr>
<tr>
<td><code>={vim script}</code></td>
<td>执行{vim script}表达式，并将返回的结果作为替换{string}</td>
</tr>
<tr>
<td><code>~</code></td>
<td>使用上一次调用时的{string}</td>
</tr>
</tbody>
</table>
<h4 id="7-3-2_在文件范围内查找并替换每一处匹配">7.3.2 在文件范围内查找并替换每一处匹配</h4><ul>
<li>标志位<code>g</code></li>
</ul>
<h4 id="7-3-3_手动控制每一次替换操作">7.3.3 手动控制每一次替换操作</h4><ul>
<li>标志位<code>c</code>   <code>:h :s_c</code></li>
</ul>
<table>
<thead>
<tr>
<th>答案</th>
<th>用途</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>y</code></td>
<td>替换此处匹配</td>
</tr>
<tr>
<td><code>n</code></td>
<td>忽略此处匹配</td>
</tr>
<tr>
<td><code>q</code></td>
<td>退出替换过程</td>
</tr>
<tr>
<td><code>l</code></td>
<td>“last”—替换此处匹配后退出</td>
</tr>
<tr>
<td><code>a</code></td>
<td>“all”—替换此处与之后所有的匹配</td>
</tr>
<tr>
<td><code>&lt;C-e&gt;</code></td>
<td>向上滚动屏幕</td>
</tr>
<tr>
<td><code>&lt;C-y&gt;</code></td>
<td>向下滚动屏幕</td>
</tr>
</tbody>
</table>
<h4 id="7-3-4_重用上次的查找模式">7.3.4 重用上次的查找模式</h4><ul>
<li>查找域留空</li>
<li><code>:h cmdline-history</code></li>
<li><code>&lt;C-r&gt;/</code>在命令历史中创建完整的记录</li>
</ul>
<h4 id="7-3-5_用寄存器的内容替换">7.3.5 用寄存器的内容替换</h4><ul>
<li>传值：通过<code>&lt;C-r&gt;{register}</code>插入寄存器内容到替换域</li>
<li>引用：通过<code>\=@{register}</code>引用寄存器内容到替换域</li>
<li>比较：<code>:let @/=&#39;……&#39;</code>  <code>:let @a=&#39;……..&#39;</code>  <code>:%s//\=@a/g</code></li>
</ul>
<h4 id="7-3-6_重复上一次Substitute命令">7.3.6 重复上一次Substitute命令</h4><ul>
<li><code>g&amp;</code>整个文件范围内执行上一次<code>substitute</code>命令 <code>:h g&amp;</code></li>
<li><code>:&amp;</code> 重复上一次<code>substitute</code>命令  <code>:h :&amp;</code></li>
<li><code>:&amp;&amp;</code> 后面的<code>&amp;</code>重复上一次的标志位</li>
<li><code>gv</code>  激活可视模式并选中上次高亮位置</li>
<li>修正<code>&amp;</code>命令</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nnoremap &amp; :&amp;&amp;&lt;CR&gt;</span><br><span class="line">xnoremap &amp; :&amp;&amp;&lt;CR&gt;</span><br></pre></td></tr></table></figure>
<h4 id="7-3-7_使用子匹配重排CSV文件的字段">7.3.7 使用子匹配重排CSV文件的字段</h4><ul>
<li><code>\n</code></li>
</ul>
<h4 id="7-3-8_在替换过程中执行算术运算">7.3.8 在替换过程中执行算术运算</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/\v\&lt;\/?h\zs\d</span><br><span class="line">:%s//\=submatch(0) - 1/g</span><br></pre></td></tr></table></figure>
<h4 id="7-3-9_交换两个或更多的单词">7.3.9 交换两个或更多的单词</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/\v(&lt;man&gt;|&lt;dog&gt;)</span><br><span class="line">:%s//\=&#123;"dog":"man","man":"dog"&#125;[submatch(1)]/g</span><br></pre></td></tr></table></figure>
<ul>
<li><code>:h submatch()</code></li>
<li><strong>Abolish.vim</strong>:超级<code>substitute</code>命令<ul>
<li>由Tim pope开发的插件</li>
<li><code>:%S/{man,dog}/{dog,man}/g</code></li>
</ul>
</li>
</ul>
<h4 id="7-3-10_在多个文件中执行查找与替换">7.3.10 在多个文件中执行查找与替换</h4><ul>
<li>散射法</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">/Pragmatic\ze Vim</span><br><span class="line">:%s//Practical/g</span><br><span class="line">:args **/*.txt</span><br><span class="line">:set hidden</span><br><span class="line">:argdo %s//Practical/ge</span><br></pre></td></tr></table></figure>
<ul>
<li>创建只包含目标的文件列表</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/Pragmatic\ze Vim</span><br><span class="line">:vimgrep /&lt;C-r&gt;// **/*.txt</span><br></pre></td></tr></table></figure>
<ul>
<li><code>:copen</code> 打开quickfix列表</li>
<li><strong>substitution/qargs.vim</strong></li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">command! -nargs=0 -bar Qargs execute 'args' QuickfixFileName()</span><br><span class="line">function! QuickfixFilenames()</span><br><span class="line">   let buffer_numbers = &#123;&#125;</span><br><span class="line">   for quickfix_item in getqflist()</span><br><span class="line">       let buffer_numbers[quickfix_item['bufnr']] = bufname(quickfix_item['bufnr'])</span><br><span class="line">   endfor</span><br><span class="line">   return join(map(values(buffer_numbers), 'fnameescape(v:val)'))</span><br><span class="line">endfunction</span><br></pre></td></tr></table></figure>
<ul>
<li><code>:Qargs</code> 把quickfix列表中的文件加至参数列表</li>
<li><code>:argdo %s//Practical/g</code></li>
<li><code>:argdo update</code> <code>:h update</code></li>
<li><code>:Qargs | argdo %s//Practical/g | update</code></li>
<li><code>:h :bar</code></li>
</ul>
<h3 id="7-4_global命令">7.4 global命令</h3><h4 id="7-4-1_结识global命令">7.4.1 结识global命令</h4><ul>
<li><code>:h :g</code></li>
<li><code>:[range]global[!] /{pattern}/ [cmd]</code></li>
<li><code>:global!  :vglobal</code></li>
</ul>
<h4 id="7-4-2_删除所有包含模式的文本行">7.4.2 删除所有包含模式的文本行</h4><ul>
<li><p><code>:g/re/d</code></p>
<ul>
<li><code>/\v\&lt;\/?\w+&gt;</code></li>
<li><code>:g//d</code></li>
</ul>
</li>
<li><p><code>:v/re/d</code></p>
<ul>
<li><code>:v/href/d</code></li>
</ul>
</li>
</ul>
<h4 id="7-4-3_将ToDo项收集至寄存器">7.4.3 将ToDo项收集至寄存器</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">qaq</span><br><span class="line">:g/TODO/yank A</span><br><span class="line">:g/TODO/t$</span><br></pre></td></tr></table></figure>
<h4 id="7-4-4_将CSS文件中所有规则的属性按照字母排序">7.4.4 将CSS文件中所有规则的属性按照字母排序</h4><ul>
<li><code>:h :sort</code></li>
<li><code>vi{ | :’&lt;,’&gt;sort</code></li>
<li><code>:g/{/ .+1,/}/-1 sort</code></li>
<li><code>:g/{pattern}/[range][cmd]</code></li>
<li><code>:g/{start}/ .,{finish} [cmd]</code></li>
<li><code>:g/{/ .+1,/}/-1 &gt;</code></li>
<li><code>:h &gt;</code> <code>:h</code> <code>:sil</code> <code>:slient</code></li>
<li><code>:g/{/sil .+1,/}/-1 &gt;</code></li>
</ul>
<hr>
<h2 id="8-_工具">8. 工具</h2><ul>
<li>通过ctags建立索引，并用其浏览源代码</li>
<li>结识ctags</li>
</ul>
<h3 id="8-1_安装Exuberant_Ctags">8.1 安装Exuberant Ctags</h3><ul>
<li><code>sudo apt-get install exuberant-ctags</code></li>
<li>osx自带的是ctags的BSD</li>
<li><code>brew install ctags</code></li>
<li>修改$PATH使/usr/local/bin比/usr/bin优先</li>
<li>Doctor JS,jsctags</li>
<li>创建代码库索引<br>ctags *.rb</li>
</ul>
<h3 id="8-2_详解标签文件">8.2 详解标签文件</h3><ul>
<li>前几行由元数据组成</li>
<li>此后的每一行由关键字、文件名以及关键字在源代码中的位置构成</li>
<li>关键字按字母顺序排列</li>
<li>用模式定位关键字，而不是行号</li>
<li>关键字的地址可以是任意的Ex命令</li>
<li>用元数据标记关键字</li>
<li>传统由制表符分隔3组字段构成：关键字、文件名以及定位符</li>
<li>扩展格式：末尾添加字段，为关键字提供元数据，c类，f函数</li>
<li>配置Vim使用ctags<br>:h ‘tags’指定标签文件查找路径<br>:h tags-option<br>set tags?查看选项内容<br>；生成标签文件<br>:!ctags -R<br>—exclude=.git或—languages=-sql<br>:nnoremap <f5> :!ctags -R<cr>映射快捷键<br>；在每次保存文件时自动执行ctags<br>autocommand允许事件发生时调用一条命令<br>:autocmd BufWritePost * call system(“ctags -R”)<br>；通过版本控制工具的回调机制自动执行ctags<br>Tim Pope的&lt;<effortless ctags="" with="" git="">&gt;讲解了如何为post-commit、post-merge以及post-checkout等事件建立回调机制<br>；使用Vim的标签跳转命令，浏览关键字的定义<br><c-]>跳转到<br><c-t>跳回<br>:h tag-stack<br>:h tag-priority<br>g<c-]>可选跳转<br>:tselect :tprev :tnext :tfirst :tlast<br>:tag {keyword}等同于<c-]><br>:tjump {keyword}等同于g<c-]><br>:h :tag  :h :tjump<br>:tag /{pattern} :tjump /{pattern}<br>:pop等同于<c-t><br>；编译代码，并通过Quickfix列表浏览错误信息<br>；不用离开Vim也能编译代码<br>；准备工作<br>；在Shell中编译工程make<br>；在Vim中编译工程:make<br>:h quickfix   加快 编辑-编译-编辑 循环<br>:cnext 跳转到下一次quickfix<br>:make! 编译不自动跳转<br>；浏览Quickfix列表<br>；位置列表以l开头,quickfix只有一份，位置列表有多份<br>:lnext | :lprev | :ll N | :lmake | :lgrep | :lvimgrep</c-t></c-]></c-]></c-]></c-t></c-]></effortless></cr></f5></li>
</ul>
<p>；回溯以前的Quickfix列表10<br>:colder | :cnewer<br>；定制外部编译器<br>h :compiler | h: make<br>；配置:make命令，使调用JSLint来验证JavaScript文件<br>nodelint依赖Node.js,可以通过NPM命令安装<br>npm install nodelint -g<br>:h ‘makeprg’  允许指定运行:make时所调用的程序<br>:setlocal makeprg=NODE<em>DISABLE_COLORS=1\ nodelint\ %<br>；相当于在命令行执行<br>export NODE_DISABLE_COLORS=1<br>nodelint 文件路径<br>；用Nodelint的输出结果填充Quickfix列表<br>‘errorformat’选项允许我们指导Vim如何解析由:make产生的输出结果:h ‘errorformat’<br>；查看缺省选项:setglobal errorformat?<br>%f文件名，%l行号，%m错误信息 :h errorformat<br>setlocal efm=%A%f\,\ line\ %l\,\ character\ %c:%m,%Z%.%#,%-G%.%#<br>；一条命令设置’makeprg’与’errorformat’<br>:h :compiler<br>:compiler nodelint<br>:args $VIMRUNTIME/compiler/<em>.vim<br>；通过grep，vimgrep以及其他工具对整个工程进行查找<br>；不必离开Vim也能调用grep<br>:h :grep<br>-i不区分大小写<br>；定制grep程序<br>:h ‘grepprg’  $</em>代表占位符，代替参数<br>:h ‘grepformat’可以逗号分隔多组格式<br>:h errorformat<br>grepprg=”grep -n $<em> /dev/null”<br>grepformat=”%f:%l:%m,%f:%l%m,%f  %l%m”<br>；通过:grep调用ack<br>；安装ack<br>ubuntu<br>sudo apt-get install ack-prep<br>sudo ln -s /usr/bin/ack-grep /usr/local/bin/ack<br>OSX<br>brew install ack<br>:set grepprg=ack\ —nogroup —column\ $</em><br>:set grepformat=%f:%l:%c:%m<br>；其他grep插件<br>ack.vim<br>fugitive.vim  :Ggrep   git-grep<br>；使用Vim内部的Grep<br>:vim[grep][!] /{pattern}/[g][j] {file} …<br>g：允许单行多匹配<br>j:允许不自动跳转<br>:h :</em>##<br>；自动补全<br>；结识Vim关键字自动补全<br>:h ‘ignorecase’会影响自动补全<br>:h ‘infercase’避免ignorecase对自动补全的影响</p>
<p><c-p>和<c-n>调用普通关键字自动补全</c-n></c-p></p>
<p><c-x>    :h ins-completion</c-x></p>
<p>；与自动补全的弹出式菜单进行交互<br>:h popupmenu-completion</p>
<p>；掌握关键字的来龙去脉<br>:h compl-current    <c-x><c-n>当前关键字补全<br>:h compl-keyword   <c-x><c-i><br>:h ‘include’<br>:h compl-tag   <c-x><c-]><br>:h ‘complete’<br>；使用字典中的单词进行自动补全<br>:h compl-dictionary   <c-x><c-k><br>:set spell<br>:h ‘dictionary’<br>；自动补全整行文本<br>:h compl-whole-line   <c-x><c-l><br>；自动补全文件名<br>:h compl-filename  <c-x><c-f><br>:pwd<br>:cd {path}<br>:cd -      :h :cd-  切换回原来的工作目录<br>；根据上下文自动补全<br>:h compl-ommi   <c-x><c-o><br>:h compl-omni-filetypes<br>:h complete-function<br>；利用Vim的拼写检查器，查找并更正拼写错误<br>；对你的工作进行拼写检查<br>:set spell<br>[s和]s遍历拼写错误项:h ]s<br>z=获取建议项:h z=，1z=<br>zg将当前单词添加到拼写文件中<br>zw把当前单词从拼写文件中删除<br>zug撤消针对当前单词的zg或zw命令<br>；使用其他拼写字典<br>:h ‘spelllang’<br>:h spell-remarks<br>:h spelllfile.vim<br>；将单词添加到拼写文件中<br>:h ‘spellfile’<br>；在插入模式下更正拼写错误</c-o></c-x></c-f></c-x></c-l></c-x></c-k></c-x></c-]></c-x></c-i></c-x></c-n></c-x></p>
<p><c-x>s<br>:h compl-spelling<br>；接下来干什么<br>；继续练习<br>；定制你自己的vim<br>essential.vim<br>vimcasts.org<br>moolenaar.net/habits.html<br>github.com/nelstrom/dotfiles<br>iccf-holland.org<br>；欲善其事，先利其器<br>附录A 根据个人喜好定制vim<br>；动态改变Vim的设置项<br>:h option-list<br>；选项前面加no,关闭功能<br>；选项之后加!,反转设置<br>；选项之后加?,获取选项当前状态<br>；选项之后加&amp;,重置为默认值<br>；可以set 多组选项<br>；setlocal只对当前缓冲区设置<br>；将配置信息存至vimrc文件<br>:h :source<br>:source {file}应用文件设置项<br>:h vimrc<br>:edit $MYVIMRC<br>；为特定类型的文件应用个性化设置<br>if has(“autocmd”)<br>   filetype on<br>   autocmd FileType ruby setlocal ts=2 sts=2 sw=2 et<br>   autocmd FileType javascript setlocal ts=4 sts=4 sw=4 noet<br>endif<br>:h :autocmd<br>:h ftplugin-name<br>~/.vim/after/ftplugin/javascript.vim<br>filetype plugin on</c-x></p>
<hr>
<p>[^f]: <code>:h f</code></p>
<p>[^hpoint]: <code>:h .</code></p>
<p>[^hstar]: <code>:h *</code></p>
<p>[^haw]: <code>:h aw</code></p>
<p>[^hcount]: <code>:h count</code></p>
<p>[^operator]: <code>:h operator</code></p>
<p>[^mapoperator]: <code>:h :map-operator</code></p>
<p>[^pcommentary]: 插件，用于注释，由Tim pope发布</p>
<p>[^omapinfo]: <code>:h omap-info</code></p>
<p>[^ptextobjentire]: 插件，用于文本操作，由Kana Natsuno发布</p>
<p>[^gU]: <code>:h gU</code></p>
<p>[^ctrlw]: <code>:h ctrl-w</code></p>
<p>[^g]: <code>:h g</code></p>
<p>[^z]: <code>:h z</code></p>
<p>[^[]: <code>:h [</code></p>
<p>[^K]: <code>:h K</code></p>
<p>[^J]: <code>:h J</code></p>
<p>[^ictrlo]: <code>:h i_CTRL-o</code>切换到插入普通模式</p>
<p>[^ictrlr]: <code>:h i_CTRL-r</code></p>
<p>[^ictrlrp]: <code>:h i_CTRL-r CTRL-p</code></p>
<p>[^digraphsdefault]: <code>:h digraphs-default</code></p>
<p>[^digraphtable]: <code>:h digraph-table</code></p>
<p>[^r]: <code>:h r</code></p>
<p>[^selectmode]: <code>:h Select-mode</code></p>
<p>[^vU]: <code>:h v_U</code> <code>:h visual-repeat</code></p>
<p>[^excmdindex]: <code>:h ex-cmd-index</code></p>
<p>[^@:]: <code>:h @:</code></p>
<p>[^hquoto:]: <code>:h quote_:</code></p>
<p>[^cctrld]: <code>:h c_CTRL-D</code></p>
<p>[^command-commplete]: <code>:h :command-complete</code></p>
<p>[^wildmode]: <code>:h &#39;wildmode&#39;</code></p>
<p>[^cctrlrctrlw]: <code>:h c_CTRL-R_CTRL-W</code></p>
<p>[^viminfo]: <code>:h viminfo</code></p>
<p>[^cmdlinespecial]: <code>:h cmdline-special</code></p>
<p>[^cmdwin]: <code>:h cmdwin</code></p>
<p>[^filenamemodifiers]: <code>:h filename-modifiers</code></p>
<p>[^hshell]: <code>:h shell</code></p>
<p>[^:!]: <code>:h :!</code></p>
<p>[^read!]: <code>:h read!</code></p>
<p>[^writec]: <code>:h write_c</code></p>
<p>[^renamefiles]: <code>:h rename-files</code></p>
<p>[^range!]: <code>:h range!</code></p>
<p>[^!]: <code>:h !</code></p>
<p>[^ls]: <code>:h :ls</code></p>
<p>[^:b]: <code>:h :b</code></p>
<p>[^:bufdo]: <code>:h :bufdo</code></p>
<p>[^punimpaired]: <code>:h [</code> 插件unimpaired.vim,由Tim pope发布</p>
<p>[^argsf]: <code>:h :args_f</code></p>
<p>[^hstarstarwildcard]: <code>:h starstar-wildcard</code></p>
<p>[^hwildcard]: <code>:h wildcard</code></p>
<p>[^backtick-expansion]: <code>:h backtick-expansion</code></p>
<p>[^hidden]: <code>:h hidden</code></p>
<p>[^windowmovecursor]: <code>:h window-move-cursor</code></p>
<p>[^mouse]: <code>:h &#39;mouse&#39;</code></p>
<p>[^tabpage]: <code>:h tabpage</code></p>
<p>[^ctrlwT]: <code>:h CTRL-w_T</code></p>
<p>[^hpath]: <code>:h &#39;path&#39;</code></p>
<p>[^filesearching]: <code>:h file-searching</code></p>
<p>[^prails]: <code>Tim Pope的rails.vim</code></p>
<p>[^explore]: <code>:h :Explore</code></p>
<p>[^netrw%]: <code>:h netrw-%</code></p>
<p>[^netrwd]: <code>:h netrw-d</code></p>
<p>[^netrwrename]: <code>:h netrw-rename</code></p>
<p>[^netrwdel]: <code>:h netrw-del</code></p>
<p>[^netrwref]: <code>:h netrw-ref</code></p>
<p>[^ctrlG]: <code>:h ctrl-G</code></p>
<p>[^writec]: <code>:h :write_c</code></p>
<p>[^:%]: <code>:h :%</code></p>
<p>[^motion]: <code>:h motion.txt</code></p>
<p>[^wordmotions]: <code>:h word-motions</code></p>
<p>[^word]: <code>:h world</code></p>
<p>[^WORD]: <code>:h WORD</code></p>
<p>[^;]: <code>:h ;</code></p>
<p>[^,]: <code>:h ,</code></p>
<p>[^mapleader]: <code>:h mapleader</code></p>
<p>[^exclusive]: <code>:h exclusive</code></p>
<p>[^textobjects]: <code>:h text-objects</code></p>
<p>[^m]: <code>:h m</code></p>
<p>[^markmotion]: <code>:h mark-motion</code></p>
<p>[^matchitinstall]: <code>:h matchit-install</code></p>
<p>[^%]: <code>:h %</code></p>
<p>[^changelist]: <code>:h changelist</code></p>
<p>[^gi]: <code>:h gi</code></p>
<p>[^gf]: <code>:h gf</code></p>
<p>[^suffixesadd]: <code>:h &#39;suffixesadd&#39;</code></p>
<p>[^path]: <code>:h &#39;path&#39;</code></p>
<p>[^quotequote]: <code>:h quote_quote</code></p>
<p>[^quote0]: <code>:h quote0</code></p>
<p>[^quotealpha]: <code>:h quote_alpha</code></p>
<p>[^quote<em>]: `:h quote</em>`</p>
<p>[^quote+]: <code>:h quote+</code></p>
<p>[^quotestar]: <code>:h quotestar</code></p>
<p>[^quote=]: <code>:h quote=</code></p>
<p>[^quote.]: <code>:h quote.</code></p>
<p>[^p]: <code>:h p</code></p>
<p>[^linewiseregister]: <code>:h linewise-register</code></p>
<p>[^paste]: <code>:h &#39;paste&#39;</code></p>
<p>[^@]: <code>:h @</code></p>
<p>[^visualbell]: <code>:h &#39;visualbell&#39;</code></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="0-_Vim解决问题的方式">0. Vim解决问题的方式</h2><h3 id="结识-_[^hpoint]_命令">结识<code>.</code> [^hpoint] 命令</h3><p><strong>功能</strong> 重复上次修改<br><stron]]>
    </summary>
    
      <category term="vim" scheme="http://x8087.gitcafe.io/tags/vim/"/>
    
      <category term="技巧" scheme="http://x8087.gitcafe.io/tags/%E6%8A%80%E5%B7%A7/"/>
    
      <category term="笔记" scheme="http://x8087.gitcafe.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="笔记" scheme="http://x8087.gitcafe.io/categories/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[笔记-图形思考力量大：解决不了的问题, 用画的就对了！]]></title>
    <link href="http://x8087.gitcafe.io/2015/08/02/%E5%9B%BE%E5%BD%A2%E6%80%9D%E8%80%83%E5%8A%9B%E9%87%8F%E5%A4%A7-%E8%A7%A3%E5%86%B3%E4%B8%8D%E4%BA%86%E7%9A%84%E9%97%AE%E9%A2%98-%E7%94%A8%E7%94%BB%E7%9A%84-%E5%B0%B1%E5%AF%B9%E4%BA%86/"/>
    <id>http://x8087.gitcafe.io/2015/08/02/图形思考力量大-解决不了的问题-用画的-就对了/</id>
    <published>2015-08-02T14:44:14.000Z</published>
    <updated>2015-08-07T01:38:47.000Z</updated>
    <content type="html"><![CDATA[<p><em>村井瑞枝/著 张凌虚/译</em></p>
<blockquote>
<p><strong>明明看了一堆书,为什么记不起来,也无法实际应用在工作上?</strong><br>如果你有以上的困扰,请务必好好研读本书，试着活用图形。<br>一旦学会灵活运用图形思考、表达，即使是左耳进右耳出的普通资讯，也能消化吸收，成为自己血肉的一部分。<br>本书以循序渐进的方式说明图形思考的优点，使用方法，读者可透过书中列举的实例，学会以图圈、三角形、箭头与线条等简单的图形，汇整思路，提高思考力和解决问题的能力！</p>
</blockquote>
<p><strong>图形思考的5大优点:</strong></p>
<ol>
<li><code>整理思绪</code></li>
<li><code>提高解决问题的能力</code></li>
<li><code>提升工作效率</code></li>
<li><code>让沟通更加顺畅</code></li>
<li><code>在任何工作场合都能派上用场</code></li>
</ol>
<p><strong>复杂变单纯,困难变简单</strong><br><strong>学会7种必胜图形，工作从此事半功倍！</strong></p>
<ol>
<li><code>将事物分解思考的</code><strong>因数分解图</strong></li>
<li><code>将事物分类思考的</code><strong>矩阵图</strong></li>
<li><code>整理思绪的</code><strong>表格图</strong></li>
<li><code>借由比较突显优势方的</code><strong>比较图</strong></li>
<li><code>让无形的时间显现的</code><strong>线表图</strong></li>
<li><code>简单表达想法的</code><strong>概念图</strong></li>
<li><code>抓住趋势的</code><strong>时程表图</strong></li>
</ol>
<hr>
<h2 id="1-_是用文字思考的人？还是用数字思考的人？或是……">1. 是用文字思考的人？还是用数字思考的人？或是……</h2><blockquote>
<p>比较文字，数字和图形使用上的区别。表明图形相对文字和数字更容易理解。</p>
<ul>
<li>只要画成图形，就能看清事物的本质</li>
<li>没错没错，这就是我要表达的意思！</li>
</ul>
</blockquote>
<hr>
<h2 id="2-_使用图形思考的5大优点">2. 使用图形思考的5大优点</h2><h3 id="2-1_整理思绪">2.1 整理思绪</h3><ul>
<li>接收的资讯量越来越多</li>
<li>透过图形汇整情报<br><code>画成图形的话，就能知道问题何在</code></li>
</ul>
<h3 id="2-2_提高解决问题能力">2.2 提高解决问题能力</h3><ul>
<li>资讯解读能力是必备能力</li>
<li>图形可以用来协助解决问题</li>
<li>例：阴晴不定的时刻表<br><code>光在脑中思考会觉得困难的问题也……</code></li>
<li>例：北方的小屋<br><code>画成图来看，答案就很简单了</code></li>
</ul>
<h3 id="2-3_提升工作效率">2.3 提升工作效率</h3><ul>
<li>提高速度的重要性</li>
</ul>
<h3 id="2-4_让沟通更加顺畅">2.4 让沟通更加顺畅</h3><ul>
<li>8成靠外表来决定</li>
<li>做得好的资料只要看一眼就能理解</li>
<li>图形是右脑负责的工作区域<br><code>做得好的资料只要看一眼就能理解</code></li>
<li>图形能培养共识</li>
<li>使用图形能留下记忆</li>
</ul>
<h3 id="2-5_所有工作场合都能派上用场">2.5 所有工作场合都能派上用场</h3><ul>
<li>用在企划书或报告书上</li>
<li>用来做笔记<br><code>把思考的事情用图形记在笔记上</code></li>
<li>用在做简报的时候<br><code>使用图形的简报简单易懂</code></li>
<li>让会议进行得更有效率<br><code>透过图形来整理，讨论会更容易达成共识</code></li>
<li>可以取代会议记录</li>
</ul>
<hr>
<h2 id="3-_没有绘画天赋也没关系">3. 没有绘画天赋也没关系</h2><ul>
<li><p><strong>所谓用在工作上的图形是?</strong></p>
<ul>
<li>只要把传达的信息表现在图形上就可以了！</li>
</ul>
</li>
<li><p><strong>图形的基本形状每个人都画得出来</strong><br><code>使用简单的图案就能画出图形</code><br>圆形，三角形，四方形，箭头，线条</p>
<p><code>恶性循环让感到棘手的意识根植心中</code><br><strong>没有画图习惯</strong>-&gt;<strong>不知道该画什么才好</strong>-&gt;<strong>感到棘手</strong>-&gt;<strong>不画了</strong></p>
<p>无论如何先拿起笔试试看<br><code>总之先动手，克服感到棘手的意识！</code><br><strong>总之先试着画看看再说</strong>-&gt;<strong>意外地能画出来</strong>-&gt;<strong>思路清晰</strong>-&gt;<strong>越画越多</strong></p>
</li>
<li><p><strong>手绘可以激发灵感</strong></p>
</li>
<li><strong>手绘容易修正</strong></li>
<li><strong>手绘可以把人拉进来一起讨论</strong></li>
<li><strong>创造一个随时能画图的环境</strong><ul>
<li>准备方格笔记纸<br><code>推荐使用可以自由画图的方格纸Life clipper 5mm方格笔记纸，life first class paper 10mm方格笔记纸</code></li>
<li>画得流畅的魔法笔<br><code>以粗线条笔为佳，推荐百乐的v corn</code></li>
<li>修正带 反覆修正图形时必备</li>
<li>附加影印功能的电子白板 用过就会上瘾，最适合思考型工作的工具！</li>
</ul>
</li>
</ul>
<hr>
<h2 id="4-_学会图形的7种必胜类型">4. 学会图形的7种必胜类型</h2><p><strong> 不是“思考图形”，而是“为了思考而使用图形”</strong></p>
<h3 id="4-1_将事物分解思考的“因数分解类型”">4.1 将事物分解思考的“因数分解类型”</h3><ul>
<li><strong>很大</strong> <strong>很复杂</strong>的问题，帮助找出<strong>切入点</strong></li>
<li>画法：<ul>
<li>左边画上一个方格，里面填上想达成的目的，往右增加方格数量。</li>
<li>从最初的方格往下一层的方格移动时，以“达成这个目标的要素是什么？”的方式进行思考，将想法扩展开来</li>
<li>区分可实行与不可实行，按顺位高低排序，淘汰不好够好的想法</li>
</ul>
</li>
</ul>
<h3 id="4-2_将事物分类思考的“矩阵类型”">4.2 将事物分类思考的“矩阵类型”</h3><ul>
<li><strong>将事物分门别类</strong>  <strong>厘清彼此关联性或优先顺序的图形</strong></li>
<li>画法：<ul>
<li>合并四个正方形，呈现格子状的图形</li>
<li>首先画出4个正方形，横向与纵向各并列2个</li>
<li>重要的条件与基准放在横轴和纵轴上</li>
</ul>
</li>
</ul>
<h3 id="4-3_整理思绪的“表格类型”">4.3 整理思绪的“表格类型”</h3><ul>
<li><strong>轻松简单地整理大量资讯</strong> <strong>商场上运用最广泛</strong> <strong>汇整资讯，达成共识</strong></li>
<li>画法：<ul>
<li>画出必要项目数量相等的横线</li>
<li>把需要思考的项目，有思考必要的项目写在横线上</li>
<li>接着在横线下方写入对应的项目内容</li>
</ul>
</li>
</ul>
<h3 id="4-4_借由比较突显优势方的“比较类型”">4.4 借由比较突显优势方的“比较类型”</h3><ul>
<li><strong>与某种事物比较，验证哪一个较好，或是用来彰显不同事物之间的相异之处</strong></li>
<li>画法：<ul>
<li>算好要比较的物品数量</li>
<li>画上相等数目的横线</li>
<li>纵轴写上比较时使用的项目</li>
<li>项目之间插入箭头，可以把每个物品的不同之处标示得更清楚</li>
</ul>
</li>
</ul>
<h3 id="4-5_让无形的时间显现的“线表类型”">4.5 让无形的时间显现的“线表类型”</h3><ul>
<li><strong>把看不见的时间整理成任何人都能了解的图形，在建立行事历之类的团队共通工作计划时使用</strong> <strong>团队确立目标，让事情顺畅进行</strong></li>
<li>画法：<ul>
<li>在横轴标示“年”、“月”、“周”、“日”等时间单位</li>
<li>依计划时间长短选择时间单位</li>
<li>纵轴写上该段期间应执行的项目</li>
<li>把每个项目所需时间以箭头标示</li>
</ul>
</li>
</ul>
<h3 id="4-6_简单表达想法的“概念类型”">4.6 简单表达想法的“概念类型”</h3><ul>
<li><strong>以非常简单且很容易理解的方式，将想转达的事物特征表现出来</strong></li>
<li>画法：<ul>
<li>思考概念构成要素有几种</li>
<li>根据构成要素的数目，画出相等数量的圆</li>
<li>弄清楚要素之间的关系：重叠、相互关联、先后顺序</li>
<li>重叠，让圆形叠在一起</li>
<li>关联，用线条连在一起</li>
<li>先后顺序，用箭头连接</li>
</ul>
</li>
</ul>
<h3 id="4-7_抓住均势的“时程表类型”">4.7 抓住均势的“时程表类型”</h3><ul>
<li><strong>分析每个阶段各有什么事时使用</strong> <strong>分析动势</strong> <strong>说明事物先后顺序</strong></li>
<li>画法：<ul>
<li>了解整个过程分成几个阶段</li>
<li>按照阶段数量，将数个本垒板形的箭头连接在一起</li>
<li>在箭头中写上该阶段的摘要</li>
<li>纵轴列出每个阶段执行的内容</li>
</ul>
</li>
</ul>
<hr>
<h2 id="5-_试着思考在工作上实际运用图形的状况">5. 试着思考在工作上实际运用图形的状况</h2><ul>
<li>透过图形学会工作上必备的2项技能<br><code>想法的“扩展技巧”和“归纳技巧”</code></li>
<li>将业绩提升1.5倍的故事</li>
<li><p>使用分解思考扩展对策<br><code>使用分解思考</code><br><code>专案小组成员</code><br><code>提升料理教室营业额的方案</code></p>
</li>
<li><p>透过分类排列优先顺序<br><code>以提升业绩为目标的矩阵图</code></p>
</li>
<li>透过分类扩展构思<br><code>料理教室的目标客群</code></li>
<li>透过比较过滤构思<br><code>比较料理教室的目标客群</code></li>
<li>从构思中再延伸出构思<br><code>男性料理教室的构思</code></li>
<li>整理、归纳概念<br><code>将3个概念整理归纳出来</code></li>
<li>汇整时程表<br><code>用图形制作一目了然的时程表</code></li>
</ul>
<hr>
<h2 id="6-_专业级的资料制作法">6. 专业级的资料制作法</h2><h3 id="6-1_分别使用适合内容的软体">6.1 分别使用适合内容的软体</h3><ul>
<li>使用电脑制作资料<ul>
<li>依公司不同有所差异</li>
<li>power point 顾问公司，广告代理商</li>
<li>word 金融机构</li>
<li>Excel 汽车和机械制造商</li>
</ul>
</li>
<li>使用power point<ul>
<li>最适合作简报的软体</li>
<li>适合用投影机放映</li>
<li>色彩图形丰富</li>
<li>基本版面设置<ul>
<li>决定标题放在资料上方或下方</li>
<li>决定页面的架构，根据内容调整版面设置</li>
</ul>
</li>
</ul>
</li>
<li>使用word<ul>
<li>适合写文章</li>
<li>注意避免冗长的文字</li>
<li>基本版本设置<ul>
<li>基本上要归纳成“标题”、“目的”、“结论”、“详细说明”4个项目</li>
<li>要做成只看第1页就知道结论的格式</li>
<li>详细内容第2页之后再说明</li>
</ul>
</li>
</ul>
</li>
<li>使用Excel<ul>
<li>适合大量图表和数据的资料</li>
<li>版面容易混乱，須注意</li>
<li>基本版面设置<ul>
<li>决定标题放在资料上方或下方</li>
<li>决定页面的架构</li>
<li>在插入图表时，在另一个sheet输入数据，只把图表贴在资料上，看起来简单易懂</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="6-2_决定资料的架构">6.2 决定资料的架构</h3><p>制作资料时一开始要做的应该是决定资料的架构。</p>
<ul>
<li>决定用多少页</li>
<li>朝怎样的方向来制作</li>
<li>避免作错重来并省略不必要的页数</li>
<li>容易理解</li>
<li>方法：<ul>
<li>条列大纲</li>
<li>在纸上把架构和要写的内容简单画成草稿</li>
<li>说明内容，确认要变更的地方</li>
</ul>
</li>
</ul>
<p><code>先画草稿，再到电脑上作业</code></p>
<h3 id="6-3_开始下标题">6.3 开始下标题</h3><p><em>标题，把整个页面想表达的讯息浓缩成精简的文字</em><br><strong>下好标题的资料，马上能传达作者想要表达的事情</strong><br><strong>决定标题后，就等于决定了资料的内容</strong></p>
<ul>
<li><p>学会3个顺利下标题的方法</p>
<ol>
<li><p>陈述对方不知道的事</p>
<blockquote>
<p>因为资料是调查汇整的，所以是别人都不知道的事或者不确认的事，含有读者可能不知道的资讯且想知道的事。<br>形式：<br><strong>其实</strong>~ （其实）两成的消费者占了营业额的8成<br><strong>果然</strong>~ （果然）节省家庭支出的项目，是以娱乐和伙食费为主。<br><strong>事实上</strong>~ （事实上）不动产价格的下滑，导致业绩低迷。</p>
</blockquote>
</li>
<li>为了做出决定而陈述结论<blockquote>
<p>为某些非下决定不可的事做出结论而制作。<br>试着比较的结果<br>果然还是这个比较好<br>和B方案比较起来，应该采用A方案<br>形式：<br><strong>以结论来说</strong> （以结论来说），今后的一年期间，要把库存量压缩到一半。<br><strong>比较之后的结果</strong> （比较之后的结果）是，工厂应该建在印度和越南。</p>
</blockquote>
</li>
<li>陈述希望对方采取行动，或希望获得对方认同的事。<blockquote>
<p>为了说服对方或是获得对方认同而撰写的资料。<br>形式：<br><strong>~应该</strong> 在研发新产品这个部分，应该投入人力。<br><strong>~是必要的</strong> 以长期观点来看，研发产品是必要的。<br><strong>~开始</strong> 从涩谷区开始，很快就能看到成果。</p>
</blockquote>
</li>
</ol>
</li>
<li>注意标题是否变成<strong>无意义的标题</strong><blockquote>
<p>思考<strong>我想用这份资料告诉对方什么？</strong>是下标题的必要步骤。<br>标题位置，资料的最上方<br>以事实的报告为主的情况，可以把标题放最下方</p>
</blockquote>
</li>
</ul>
<h3 id="6-4_画出图形">6.4 画出图形</h3><ol>
<li>记住经常使用的图形<br><code>五种基本形状，四方形，三角形，圆形，线条，箭头，本垒板形</code></li>
<li>使用对齐排列</li>
</ol>
<h3 id="6-5_整理外观">6.5 整理外观</h3><blockquote>
<p>工作上使用的资料，注意细节，显得专业<br>字形统一，线条粗细一致</p>
</blockquote>
<ol>
<li><p>汇整相同的资讯</p>
<blockquote>
<p>把相同资讯重复出现的汇整标示，减少多余资讯，让内容简单明了，容易理解。<br>数字之类的符号的单位放进项目，看起来会更整齐。</p>
</blockquote>
</li>
<li><p>文字说明尽可能简短</p>
<blockquote>
<p>将较长的内容拆开来写<br>利用<strong>原因在于</strong>，<strong>如何才能</strong>，<strong>以什么</strong>之类的词汇作为拆句的基准点，连接在这些词后面的文句，则拆掉作为补充资讯。<br>不但列出重点，同时还能改善外观。<br><strong>Because</strong>，<strong>How</strong>，<strong>What</strong></p>
</blockquote>
</li>
<li><p>了解颜色的使用方式</p>
<blockquote>
<p>专业资料，透过颜色表示事物的重要程度<br>即使没有文字说明，颜色也能让阅读者直觉感受到<strong>哪里很重要</strong>，<strong>必须看哪里</strong><br>方法：</p>
<ol>
<li>选择一个颜色作为资料中使用的基础色<br>逻辑性简报、以数据为主的报告资料——&gt;蓝绿之类的冷色系<br>发售新产品或提供给顾客的营业用提案资料——&gt;红、橘、黄之类的暖色系<br>蓝、绿——沉着冷静客观<br>红——热情，振奋，精神，活泼<br>橘、黄——激发购买欲</li>
<li>选一个比基本色亮度更高的颜色作为辅助色。<br>蓝色——水蓝色<br>绿色——浅绿色</li>
<li>搭配白色</li>
<li>基本色用在重要的地方</li>
<li>辅助色用在除基本色之外需要上色的部分</li>
<li>表格可通过上色把项目突显出来。</li>
<li>即使转变成黑白模式后明暗也很清楚，适合黑白打印</li>
</ol>
</blockquote>
</li>
<li><p>选择适合内容的字体</p>
<blockquote>
<p>文章里常用细明体，新细明体和MS Gothic<br>平常工作用的资料，建议MS Gothic，不花俏且远处也能看清，适合制作简报<br>明体给人文学、学术性的印象，因此多半用在论文之类的文章，想要营造知性气氛时相当适用。<br>明体的横线比纵线粗，适合直书式的资料<br>英文商业简报基本上使用Arial<br>Times New Roman适合用在文学和学术性方面的资料</p>
</blockquote>
</li>
</ol>
<h3 id="6-6_最终检查的方法">6.6 最终检查的方法</h3><ol>
<li>检查用字遣词<blockquote>
<p>简写的罗马字也要翻译成中文<br>使用具体数字</p>
</blockquote>
</li>
<li>附上单位</li>
<li>一定要标明出处和母体<blockquote>
<p>资料出处，何时的数据<br>母体是以[n=数字]表示</p>
</blockquote>
</li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<p><em>村井瑞枝/著 张凌虚/译</em></p>
<blockquote>
<p><strong>明明看了一堆书,为什么记不起来,也无法实际应用在工作上?</strong><br>如果你有以上的困扰,请务必好好研读本书，试着活用图形。<br>一旦学会灵活运用图形思考、表达]]>
    </summary>
    
      <category term="图形" scheme="http://x8087.gitcafe.io/tags/%E5%9B%BE%E5%BD%A2/"/>
    
      <category term="思考" scheme="http://x8087.gitcafe.io/tags/%E6%80%9D%E8%80%83/"/>
    
      <category term="技巧" scheme="http://x8087.gitcafe.io/tags/%E6%8A%80%E5%B7%A7/"/>
    
      <category term="笔记" scheme="http://x8087.gitcafe.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="绘图" scheme="http://x8087.gitcafe.io/tags/%E7%BB%98%E5%9B%BE/"/>
    
      <category term="笔记" scheme="http://x8087.gitcafe.io/categories/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[各类资源各类网站收藏]]></title>
    <link href="http://x8087.gitcafe.io/2015/07/31/%E5%90%84%E7%B1%BB%E8%B5%84%E6%BA%90%E5%90%84%E7%B1%BB%E7%BD%91%E7%AB%99%E6%94%B6%E8%97%8F/"/>
    <id>http://x8087.gitcafe.io/2015/07/31/各类资源各类网站收藏/</id>
    <published>2015-07-31T02:51:38.000Z</published>
    <updated>2015-08-03T02:04:20.000Z</updated>
    <content type="html"><![CDATA[<h6 id="评论系统:">评论系统:</h6><p><a href="http://duoshuo.com" target="_blank" rel="external">多说</a><br><a href="https://disqus.com" target="_blank" rel="external">disqus</a></p>
<h6 id="图标:">图标:</h6><p><a href="http://fortawesome.github.io/Font-Awesome/3.2.1/icons/" target="_blank" rel="external">Font Awesome</a><br><a href="http://www.faviconer.com/" target="_blank" rel="external">Faviconer</a><br><a href="http://www.bitbug.net" target="_blank" rel="external">比特虫</a><br><a href="http://icomoon.io/" target="_blank" rel="external">icoMoon</a></p>
<p><a href="https://www.dnspod.cn" target="_blank" rel="external">DNSPod域名映射CDN</a><br><a href="https://www.godaddy.com" target="_blank" rel="external">Goddaddy域名提供商</a><br><a href="http://www.sousuoyinqingtijiao.com/" target="_blank" rel="external">屈站长</a></p>
<h6 id="绘图引擎:">绘图引擎:</h6><p><a href="http://docs.mathjax.org/en/latest/index.html" target="_blank" rel="external">MathJax数学公式引擎javascrip</a><a href="https://mathjax-chinese-doc.readthedocs.org/en/latest/" target="_blank" rel="external">中文文档</a><br><a href="http://bramp.github.io/js-sequence-diagrams/" target="_blank" rel="external">序列图javascript库</a><br><a href="http://adrai.github.io/flowchart.js/" target="_blank" rel="external">流程图javascript库</a></p>
<h6 id="404:">404:</h6><p><a href="http://www.qq.com/404" target="_blank" rel="external">腾讯公益404</a><br><a href="http://yibo.iyiyun.com/Index/web404" target="_blank" rel="external">404公益_益云(公益互联网)社会创新中心</a><br><a href="http://404page.missingkids.org.tw/" target="_blank" rel="external">失蹤兒童少年資料管理中心404</a></p>
<h6 id="图床:">图床:</h6><p><a href="http://www.qiniu.com/" target="_blank" rel="external">七牛图床</a><br><a href="http://www.farbox.com/" target="_blank" rel="external">FarBox</a><br><a href="http://www.dropbox.com/" target="_blank" rel="external">DropBox</a><br><a href="http://www.upyun.com/" target="_blank" rel="external">又拍云</a></p>
<h6 id="分享:">分享:</h6><p><a href="http://share.baidu.com/" target="_blank" rel="external">百度分享</a><br><a href="http://www.bshare.cn/" target="_blank" rel="external">bshare</a><br><a href="http://www.jiathis.com/" target="_blank" rel="external">加网</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h6 id="评论系统:">评论系统:</h6><p><a href="http://duoshuo.com" target="_blank" rel="external">多说</a><br><a href="https://disqus.com" target="_blan]]>
    </summary>
    
      <category term="收藏" scheme="http://x8087.gitcafe.io/tags/%E6%94%B6%E8%97%8F/"/>
    
      <category term="网站" scheme="http://x8087.gitcafe.io/tags/%E7%BD%91%E7%AB%99/"/>
    
      <category term="资源" scheme="http://x8087.gitcafe.io/tags/%E8%B5%84%E6%BA%90/"/>
    
      <category term="技术" scheme="http://x8087.gitcafe.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[git学习]]></title>
    <link href="http://x8087.gitcafe.io/2015/07/30/git%E5%AD%A6%E4%B9%A0/"/>
    <id>http://x8087.gitcafe.io/2015/07/30/git学习/</id>
    <published>2015-07-30T09:46:31.000Z</published>
    <updated>2015-07-31T02:01:08.000Z</updated>
    <content type="html"><![CDATA[<h3 id="1-_取得项目的Git仓库">1. 取得项目的Git仓库</h3><ul>
<li>在工作目录中初始化新仓库<br><code>git init</code><br><code>git add</code></li>
<li>从现有仓库克隆<br><code>git clone [url]</code><br><code>git clone [url] [addr]</code></li>
</ul>
<hr>
<h3 id="2-_记录每次更新到仓库">2. 记录每次更新到仓库</h3><ul>
<li>文件状态 <code>untracked 未跟踪</code>, <code>unmodified 未修改</code>, <code>modified 已修改</code>, <code>staged 已缓存</code></li>
</ul>
<h5 id="2-1_检查当前文件状态_git_status">2.1 检查当前文件状态 <code>git status</code></h5><h5 id="2-2_跟踪新文件git_add">2.2 跟踪新文件<code>git add</code></h5><h5 id="2-3_暂存已修改文件git_add">2.3 暂存已修改文件<code>git add</code></h5><h5 id="2-4_忽略某些文件-gitignore">2.4 忽略某些文件<code>.gitignore</code></h5><ul>
<li>忽略空行及<code>#</code>开头的行</li>
<li>后跟<code>/</code>表示目录</li>
<li>模式前加<code>!</code>表示取反，忽略模式以外的文件或目录</li>
<li>以标准glob模式匹配<ul>
<li>指shell所使用简化了的正则表达式</li>
<li><code>*</code>匹配0个或多个任意字符</li>
<li><code>[abc]</code>可选匹配</li>
<li><code>?</code>匹配一个任意字符</li>
<li><code>[0-9]</code>匹配指定范围字符</li>
<li><code>**/</code>递归匹配子目录（1.8.2以上版本）</li>
</ul>
</li>
</ul>
<h5 id="2-5_查看已暂存和未暂存的文件">2.5 查看已暂存和未暂存的文件</h5><ul>
<li><code>git diff</code>比较工作目录中当前文件与暂存文件之间的差异 </li>
<li><code>git diff --cached</code>或<code>git diff --staged</code>（1.6.1以上版本，效果一样）比较暂存文件与上次提交文件之间的差异</li>
</ul>
<h5 id="2-6_提交更新">2.6 提交更新</h5><ul>
<li><code>git commit</code></li>
<li><code>git config --global core.editor</code>设定编辑器</li>
<li><code>-v</code>显示详细差异</li>
</ul>
<h5 id="2-7_跳过使用暂存区域">2.7 跳过使用暂存区域</h5><ul>
<li><code>git commit -a</code></li>
</ul>
<h5 id="2-8_移除文件">2.8 移除文件</h5><ul>
<li><code>git rm</code></li>
<li><code>git rm -f</code>强制删除包含在暂存区的文件</li>
<li><code>git rm --cached</code>删除版本控制，保留本地文件</li>
<li>后面可跟文件或者目录的名字，也可以使用glob模式</li>
<li>模式前加反斜杠<code>\</code>，使用git自身的文件模式扩展匹配方式，<code>*</code>会递归匹配</li>
</ul>
<h5 id="2-9_移动文件">2.9 移动文件</h5><ul>
<li><code>git mv file_from file_to</code></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="1-_取得项目的Git仓库">1. 取得项目的Git仓库</h3><ul>
<li>在工作目录中初始化新仓库<br><code>git init</code><br><code>git add</code></li>
<li>从现有仓库克隆<br><code>gi]]>
    </summary>
    
      <category term="git" scheme="http://x8087.gitcafe.io/tags/git/"/>
    
      <category term="版本控制" scheme="http://x8087.gitcafe.io/tags/%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/"/>
    
      <category term="笔记" scheme="http://x8087.gitcafe.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="技术" scheme="http://x8087.gitcafe.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[hexo NexT主题 多说评论的显示问题解决]]></title>
    <link href="http://x8087.gitcafe.io/2015/07/29/hexo-NexT%E4%B8%BB%E9%A2%98-%E5%A4%9A%E8%AF%B4%E8%AF%84%E8%AE%BA%E7%9A%84%E6%98%BE%E7%A4%BA%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/"/>
    <id>http://x8087.gitcafe.io/2015/07/29/hexo-NexT主题-多说评论的显示问题解决/</id>
    <published>2015-07-29T02:52:07.000Z</published>
    <updated>2015-08-03T02:13:50.000Z</updated>
    <content type="html"><![CDATA[<p><font color="blue"><strong>2015-08-01更新：</strong>nexT官方已于0.4.5.1版本修复</font></p>
<hr>
<h5 id="问题说明：">问题说明：</h5><hr>
<p><strong>hexo</strong> <strong>NexT主题</strong>配置<strong>多说评论</strong></p>
<ul>
<li><strong>游客</strong>评论正常显示</li>
<li>当有<strong>登陆用户</strong>发布评论后会导致评论无法正常显示。<br>使用了<code>hexo3.1.1</code>+<code>nexT0.3.0</code>+<code>duoshuo</code></li>
</ul>
<h5 id="解决方法：">解决方法：</h5><hr>
<p>  把<strong>主题配置</strong><code>_config.yml</code>里<code>duoshuo_info</code>下的<code>admin_enable</code>设置成<code>true</code></p>
<hr>
<h5 id="背景介绍+详细说明">背景介绍+详细说明</h5><ul>
<li><p><em>背景</em>~~</p>
<blockquote>
<p>花了一小天时间把github和gitcafe的pages主页弄成博客<br>结果评论系统无论怎么弄都有显示问题<br>于是乎有了下面的漫长折腾之旅。</p>
</blockquote>
</li>
<li><p><em>为什么不用其他评论系统</em></p>
<blockquote>
<p>由于主要面向国内用户，评论后台不打算用disqus，而准备采用多说(duoshuo)。</p>
</blockquote>
</li>
<li><p><em>问题表现</em></p>
<blockquote>
<p>按照多说和next主题官方说明添加配置，能够正常显示评论界面。<br>通过登陆发表评论，点击发布后会一直显示正在发布，刷新评论界面消失，发出的评论没有显示，而在多说后台能够查询到，并无问题。</p>
</blockquote>
</li>
<li><p><em>解决过程</em></p>
<blockquote>
<p>通过谷歌搜索了一圈，虽然有遇到相似问题的案例，但是并无半毫收获，不是没有解决，就是吐槽多说后台问题比较多，建议转投disqus。百无聊赖才想起自己也是个程序猿，虽然不是搞web前端开发，但是多少能看懂一点。于是尝试自己调试查找问题。</p>
<ul>
<li><em>测试验证</em><br>测试了下，只要不登陆发表评论，或者把所有登陆用户的评论删除，评论界面是可以正常显示的。打开浏览器的开发者工具，可以看到当页面有问题时<code>source/js/hook-duoshuo.js</code>脚本在<strong>18</strong>行报错找不到变量<code>duoshuo_user_ID</code>。<br>到这里，之前的所有缺少底气和担心都烟消云散。</li>
<li><em>定位问题并解决</em><br>问题确定了，接下来只要找到问题的根源就可以轻松解决。在next项目目录下搜索<code>duoshuo_user_ID</code>，可以看到包含字段的几个文件。其中可以看出<code>layout/_scripts/comments/duoshuo.swig</code>文件就是这个问题关键，如下是文件的20到28行<figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml">&#123;% if theme.duoshuo_info.ua_enable %&#125;</span><br><span class="line"> &#123;% if theme.duoshuo_info.admin_enable %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="kotlin"></span><br><span class="line"> <span class="variable"><span class="keyword">var</span> duoshuo_user_ID</span> = </span></span><span class="expression">&#123;&#123;<span class="variable">theme.duoshuo</span>_<span class="variable">info.user</span>_<span class="variable">id</span>&#125;&#125;</span><span class="xml"><span class="undefined"></span><br><span class="line">    </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line">  &#123;% endif %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="title">script</span> <span class="attribute">src</span>=<span class="value">"</span></span></span><span class="expression">&#123;&#123; <span class="variable">url</span>_<span class="variable">for</span>(<span class="variable">theme.js</span>) &#125;&#125;</span><span class="xml"><span class="tag"><span class="value">/ua-parser.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">script</span> <span class="attribute">src</span>=<span class="value">"</span></span></span><span class="expression">&#123;&#123; <span class="variable">url</span>_<span class="variable">for</span>(<span class="variable">theme.js</span>) &#125;&#125;</span><span class="xml"><span class="tag"><span class="value">/hook-duoshuo.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line">  &#123;% endif %&#125;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>可以看出如果主题配置里<code>duoshuo_info</code>的<code>ua_enable</code>设置为<code>true</code>时会往页面嵌入<code>hook-duoshuo.js</code>，而<code>admin_enable</code>设置为<code>true</code>时则会生成变量<code>duoshuo_user_ID</code>。这时才发现原来罪魁祸首是主题配置里的<code>admin_enable</code>设置成了<code>false</code>，在next官方还没修复之前，把它设置成<code>true</code>就可以完美解决了。</p>
</blockquote>
</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<p><font color="blue"><strong>2015-08-01更新：</strong>nexT官方已于0.4.5.1版本修复</font></p>
<hr>
<h5 id="问题说明：">问题说明：</h5><hr>
<p><strong>hexo</stron]]>
    </summary>
    
      <category term="bug" scheme="http://x8087.gitcafe.io/tags/bug/"/>
    
      <category term="hexo" scheme="http://x8087.gitcafe.io/tags/hexo/"/>
    
      <category term="next" scheme="http://x8087.gitcafe.io/tags/next/"/>
    
      <category term="多说" scheme="http://x8087.gitcafe.io/tags/%E5%A4%9A%E8%AF%B4/"/>
    
      <category term="技术" scheme="http://x8087.gitcafe.io/tags/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="问题" scheme="http://x8087.gitcafe.io/tags/%E9%97%AE%E9%A2%98/"/>
    
      <category term="技术" scheme="http://x8087.gitcafe.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[累觉不爱的闹腾]]></title>
    <link href="http://x8087.gitcafe.io/2015/07/28/%E7%B4%AF%E8%A7%89%E4%B8%8D%E7%88%B1%E7%9A%84%E9%97%B9%E8%85%BE/"/>
    <id>http://x8087.gitcafe.io/2015/07/28/累觉不爱的闹腾/</id>
    <published>2015-07-28T06:21:38.000Z</published>
    <updated>2015-07-30T00:20:11.000Z</updated>
    <content type="html"><![CDATA[<p>只希望你和我好，<br>互不猜忌，<br>也互不称誉，<br>安如平日，<br>你和我说话像对自己说话一样，<br>我和你说话也像对自己说话一样。<br><em>——write by sstny.</em></p>
<p>2015-07-29 22点 发脾气</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>只希望你和我好，<br>互不猜忌，<br>也互不称誉，<br>安如平日，<br>你和我说话像对自己说话一样，<br>我和你说话也像对自己说话一样。<br><em>——write by sstny.</em></p>
<p>2015-07-29 22点 发脾气</p>
]]>
    </summary>
    
      <category term="杂感" scheme="http://x8087.gitcafe.io/tags/%E6%9D%82%E6%84%9F/"/>
    
      <category term="生活" scheme="http://x8087.gitcafe.io/tags/%E7%94%9F%E6%B4%BB/"/>
    
      <category term="情感" scheme="http://x8087.gitcafe.io/categories/%E6%83%85%E6%84%9F/"/>
    
  </entry>
  
</feed>